Version 4.0 HI-TECH Software Intermediate Code
[p mainexit ]
"1999 D:\pic\include\pic16f877a.h
[; ;D:\pic\include\pic16f877a.h: 1999: extern volatile unsigned char TXSTA __attribute__((address(0x098)));
[v _TXSTA `Vuc ~T0 @X0 0 e@152 ]
"964
[; ;D:\pic\include\pic16f877a.h: 964: extern volatile unsigned char RCSTA __attribute__((address(0x018)));
[v _RCSTA `Vuc ~T0 @X0 0 e@24 ]
"2080
[; ;D:\pic\include\pic16f877a.h: 2080: extern volatile unsigned char SPBRG __attribute__((address(0x099)));
[v _SPBRG `Vuc ~T0 @X0 0 e@153 ]
"24 serialPassword.c
[; ;serialPassword.c: 24: void printMessage(char *message);
[v _printMessage `(v ~T0 @X0 0 ef1`*uc ]
"22
[; ;serialPassword.c: 22: void read(char *message);
[v _read `(v ~T0 @X0 0 ef1`*uc ]
"1059 D:\pic\include\pic16f877a.h
[; ;D:\pic\include\pic16f877a.h: 1059: extern volatile unsigned char TXREG __attribute__((address(0x019)));
[v _TXREG `Vuc ~T0 @X0 0 e@25 ]
"3016
[; ;D:\pic\include\pic16f877a.h: 3016: extern volatile __bit TRMT __attribute__((address(0x4C1)));
[v _TRMT `Vb ~T0 @X0 0 e@1217 ]
"56 D:\pic\include\c90\string.h
[; ;D:\pic\include\c90\string.h: 56: extern size_t strlen(const char *);
[v _strlen `(ui ~T0 @X0 0 ef1`*Cuc ]
"23 serialPassword.c
[; ;serialPassword.c: 23: char receive();
[v _receive `(uc ~T0 @X0 0 e? ]
"45 D:\pic\include\c90\string.h
[; ;D:\pic\include\c90\string.h: 45: extern int strcmp(const char *, const char *);
[v _strcmp `(i ~T0 @X0 0 ef2`*Cuc`*Cuc ]
"2743 D:\pic\include\pic16f877a.h
[; ;D:\pic\include\pic16f877a.h: 2743: extern volatile __bit RCIF __attribute__((address(0x65)));
[v _RCIF `Vb ~T0 @X0 0 e@101 ]
"1066
[; ;D:\pic\include\pic16f877a.h: 1066: extern volatile unsigned char RCREG __attribute__((address(0x01A)));
[v _RCREG `Vuc ~T0 @X0 0 e@26 ]
"8 serialPassword.c
[p x FOSC = EXTRC ]
"9
[p x WDTE = OFF ]
"10
[p x PWRTE = OFF ]
"11
[p x BOREN = ON ]
"12
[p x LVP = ON ]
"13
[p x CPD = OFF ]
"14
[p x WRT = OFF ]
"15
[p x CP = OFF ]
"54 D:\pic\include\pic16f877a.h
[; ;D:\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;D:\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;D:\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;D:\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;D:\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;D:\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;D:\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;D:\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;D:\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;D:\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;D:\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;D:\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;D:\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;D:\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;D:\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;D:\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;D:\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;D:\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;D:\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;D:\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;D:\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;D:\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;D:\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;D:\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;D:\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;D:\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;D:\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;D:\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;D:\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;D:\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;D:\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;D:\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;D:\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;D:\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;D:\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;D:\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;D:\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;D:\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;D:\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;D:\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;D:\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;D:\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;D:\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;D:\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;D:\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;D:\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;D:\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;D:\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;D:\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;D:\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;D:\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;D:\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;D:\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;D:\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;D:\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;D:\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;D:\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;D:\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;D:\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;D:\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"26 serialPassword.c
[; ;serialPassword.c: 26: int flag = 0;
[v _flag `i ~T0 @X0 1 e ]
[i _flag
-> 0 `i
]
[v $root$_main `(v ~T0 @X0 0 e ]
"28
[; ;serialPassword.c: 28: void main(void) {
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"30
[; ;serialPassword.c: 30:     TXSTA = 0x25;
[e = _TXSTA -> -> 37 `i `uc ]
"31
[; ;serialPassword.c: 31:     RCSTA = 0x90;
[e = _RCSTA -> -> 144 `i `uc ]
"32
[; ;serialPassword.c: 32:     SPBRG = 24;
[e = _SPBRG -> -> 24 `i `uc ]
"34
[; ;serialPassword.c: 34:     char input[40];
[v _input `uc ~T0 @X0 -> 40 `i a ]
"37
[; ;serialPassword.c: 37:     printMessage("\r Enter your six character password...\r");
[e ( _printMessage (1 :s 1C ]
"38
[; ;serialPassword.c: 38:     read(input);
[e ( _read (1 &U _input ]
"43
[; ;serialPassword.c: 43: }
[e :UE 95 ]
}
"45
[; ;serialPassword.c: 45: void printMessage(char *textMessage) {
[v _printMessage `(v ~T0 @X0 1 ef1`*uc ]
{
[e :U _printMessage ]
[v _textMessage `*uc ~T0 @X0 1 r1 ]
[f ]
"46
[; ;serialPassword.c: 46:     if (flag == 0) {
[e $ ! == _flag -> 0 `i 97  ]
{
"47
[; ;serialPassword.c: 47:         for (int i = 0; textMessage[i]; i++) {
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $U 101  ]
[e :U 98 ]
{
"49
[; ;serialPassword.c: 49:             TXREG = textMessage[i];
[e = _TXREG -> *U + _textMessage * -> _i `x -> -> # *U _textMessage `i `x `uc ]
"50
[; ;serialPassword.c: 50:             while (TRMT == 0);
[e $U 102  ]
[e :U 103 ]
[e :U 102 ]
[e $ == -> _TRMT `i -> 0 `i 103  ]
[e :U 104 ]
"54
[; ;serialPassword.c: 54:             if (i == strlen(textMessage)) {
[e $ ! == -> _i `ui ( _strlen (1 -> _textMessage `*Cuc 105  ]
{
"55
[; ;serialPassword.c: 55:                 flag = 1;
[e = _flag -> 1 `i ]
"56
[; ;serialPassword.c: 56:                 while (TRMT == 0);
[e $U 106  ]
[e :U 107 ]
[e :U 106 ]
[e $ == -> _TRMT `i -> 0 `i 107  ]
[e :U 108 ]
"57
[; ;serialPassword.c: 57:                 break;
[e $U 99  ]
"58
[; ;serialPassword.c: 58:             }
}
[e :U 105 ]
"59
[; ;serialPassword.c: 59:         }
}
[e ++ _i -> 1 `i ]
[e :U 101 ]
[e $ != -> *U + _textMessage * -> _i `x -> -> # *U _textMessage `i `x `i -> 0 `i 98  ]
[e :U 99 ]
}
"60
[; ;serialPassword.c: 60:     }
}
[e :U 97 ]
"61
[; ;serialPassword.c: 61: }
[e :UE 96 ]
}
"63
[; ;serialPassword.c: 63: void read(char *message) {
[v _read `(v ~T0 @X0 1 ef1`*uc ]
{
[e :U _read ]
[v _message `*uc ~T0 @X0 1 r1 ]
[f ]
"65
[; ;serialPassword.c: 65:     for (int i = 0;; i++) {
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e :U 110 ]
{
"67
[; ;serialPassword.c: 67:         message[i] = receive();
[e = *U + _message * -> _i `x -> -> # *U _message `i `x ( _receive ..  ]
"69
[; ;serialPassword.c: 69:         if (message[i] == '\r') {
[e $ ! == -> *U + _message * -> _i `x -> -> # *U _message `i `x `ui -> 13 `ui 113  ]
{
"70
[; ;serialPassword.c: 70:             message[i] = '\0';
[e = *U + _message * -> _i `x -> -> # *U _message `i `x -> -> 0 `ui `uc ]
"71
[; ;serialPassword.c: 71:             break;
[e $U 111  ]
"72
[; ;serialPassword.c: 72:         }
}
[e :U 113 ]
"74
[; ;serialPassword.c: 74:         printMessage("*");
[e ( _printMessage (1 :s 2C ]
"75
[; ;serialPassword.c: 75:     }
}
[e ++ _i -> 1 `i ]
[e $U 110  ]
[e :U 111 ]
}
"77
[; ;serialPassword.c: 77:     printMessage(message);
[e ( _printMessage (1 _message ]
"78
[; ;serialPassword.c: 78:     if (strcmp("123456", message) != 0) {
[e $ ! != ( _strcmp (2 , :s 3C -> _message `*Cuc -> 0 `i 114  ]
{
"79
[; ;serialPassword.c: 79:         printMessage("\rAuthentication Successful\r");
[e ( _printMessage (1 :s 4C ]
"80
[; ;serialPassword.c: 80:     } else {
}
[e $U 115  ]
[e :U 114 ]
{
"81
[; ;serialPassword.c: 81:         printMessage("\r Authentication Failure!!! \r");
[e ( _printMessage (1 :s 5C ]
"82
[; ;serialPassword.c: 82:     }
}
[e :U 115 ]
"84
[; ;serialPassword.c: 84: }
[e :UE 109 ]
}
"86
[; ;serialPassword.c: 86: char receive() {
[v _receive `(uc ~T0 @X0 1 ef ]
{
[e :U _receive ]
[f ]
"88
[; ;serialPassword.c: 88:     char ch;
[v _ch `uc ~T0 @X0 1 a ]
"89
[; ;serialPassword.c: 89:     while (RCIF == 0);
[e $U 117  ]
[e :U 118 ]
[e :U 117 ]
[e $ == -> _RCIF `i -> 0 `i 118  ]
[e :U 119 ]
"90
[; ;serialPassword.c: 90:     ch = RCREG;
[e = _ch -> _RCREG `uc ]
"91
[; ;serialPassword.c: 91:     return ch;
[e ) _ch ]
[e $UE 116  ]
"92
[; ;serialPassword.c: 92: }
[e :UE 116 ]
}
[a 3C 49 50 51 52 53 54 0 ]
[a 2C 42 0 ]
[a 4C 13 65 117 116 104 101 110 116 105 99 97 116 105 111 110 32 83 117 99 99 101 115 115 102 117 108 13 0 ]
[a 1C 13 32 69 110 116 101 114 32 121 111 117 114 32 115 105 120 32 99 104 97 114 97 99 116 101 114 32 112 97 115 115 119 111 114 100 46 46 46 13 0 ]
[a 5C 13 32 65 117 116 104 101 110 116 105 99 97 116 105 111 110 32 70 97 105 108 117 114 101 33 33 33 32 13 0 ]
