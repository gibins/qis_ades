

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu May 22 19:55:07 2025

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F876A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000D                     	;# 
   117  000E                     	;# 
   118  000E                     	;# 
   119  000F                     	;# 
   120  0010                     	;# 
   121  0011                     	;# 
   122  0012                     	;# 
   123  0013                     	;# 
   124  0014                     	;# 
   125  0015                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0019                     	;# 
   131  001A                     	;# 
   132  001B                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  001D                     	;# 
   136  001E                     	;# 
   137  001F                     	;# 
   138  0081                     	;# 
   139  0085                     	;# 
   140  0086                     	;# 
   141  0087                     	;# 
   142  008C                     	;# 
   143  008D                     	;# 
   144  008E                     	;# 
   145  0091                     	;# 
   146  0092                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  0006                     _PORTB	set	6
   162  0007                     _PORTC	set	7
   163  0032                     _RB2	set	50
   164  0031                     _RB1	set	49
   165  0030                     _RB0	set	48
   166  0087                     _TRISC	set	135
   167  0086                     _TRISB	set	134
   168                           
   169                           	psect	strings
   170  0003                     __pstrings:	
   171  0003                     stringtab:	
   172  0003                     __stringtab:	
   173  0003                     stringcode:	
   174                           ;	String table - string pointers are 1 byte each
   175                           
   176  0003                     stringdir:	
   177  0003  3000               	movlw	high stringdir
   178  0004  008A               	movwf	10
   179  0005  0804               	movf	4,w
   180  0006  0A84               	incf	4,f
   181  0007  0782               	addwf	2,f
   182  0008                     __stringbase:	
   183  0008  3400               	retlw	0
   184  0009                     __end_of__stringtab:	
   185  0009                     STR_1:	
   186  0009  3448               	retlw	72	;'H'
   187  000A  3465               	retlw	101	;'e'
   188  000B  346C               	retlw	108	;'l'
   189  000C  346C               	retlw	108	;'l'
   190  000D  346F               	retlw	111	;'o'
   191  000E  3420               	retlw	32	;' '
   192  000F  3400               	retlw	0
   193                           
   194                           ; #config settings
   195  0000                     
   196                           	psect	cinit
   197  07FC                     start_initialization:	
   198  07FC                     __initialization:	
   199  07FC                     end_of_initialization:	
   200                           ;End of C runtime variable initialization code
   201                           
   202  07FC                     __end_of__initialization:	
   203  07FC  0183               	clrf	3
   204  07FD  120A  118A  2F62   	ljmp	_main	;jump to C main() function
   205                           
   206                           	psect	cstackCOMMON
   207  0070                     __pcstackCOMMON:	
   208  0070                     ?_lcd_enable:	
   209  0070                     ??_lcd_enable:	
   210                           ; 1 bytes @ 0x0
   211                           
   212  0070                     ?_Fourbitcmd:	
   213                           ; 1 bytes @ 0x0
   214                           
   215  0070                     ?_Forbitdata:	
   216                           ; 1 bytes @ 0x0
   217                           
   218  0070                     ?_Forbit_init:	
   219                           ; 1 bytes @ 0x0
   220                           
   221  0070                     ?_print:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0070                     ?_main:	
   225                           ; 1 bytes @ 0x0
   226                           
   227                           
   228                           ; 1 bytes @ 0x0
   229  0070                     	ds	2
   230  0072                     ??_Fourbitcmd:	
   231  0072                     ??_Forbitdata:	
   232                           ; 1 bytes @ 0x2
   233                           
   234                           
   235                           ; 1 bytes @ 0x2
   236  0072                     	ds	2
   237  0074                     Fourbitcmd@a:	
   238  0074                     Forbitdata@b:	
   239                           ; 1 bytes @ 0x4
   240                           
   241                           
   242                           ; 1 bytes @ 0x4
   243  0074                     	ds	1
   244  0075                     ??_Forbit_init:	
   245  0075                     ??_print:	
   246                           ; 1 bytes @ 0x5
   247                           
   248  0075                     print@i:	
   249                           ; 1 bytes @ 0x5
   250                           
   251                           
   252                           ; 2 bytes @ 0x5
   253  0075                     	ds	2
   254  0077                     print@data:	
   255                           
   256                           ; 1 bytes @ 0x7
   257  0077                     	ds	1
   258  0078                     ??_main:	
   259                           
   260                           	psect	maintext
   261  0762                     __pmaintext:	
   262                           ; 1 bytes @ 0x8
   263 ;;
   264 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   265 ;;
   266 ;; *************** function _main *****************
   267 ;; Defined at:
   268 ;;		line 86 in file "lcd.c"
   269 ;; Parameters:    Size  Location     Type
   270 ;;		None
   271 ;; Auto vars:     Size  Location     Type
   272 ;;		None
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   277 ;; Tracked objects:
   278 ;;		On entry : B00/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   282 ;;      Params:         0       0       0       0       0
   283 ;;      Locals:         0       0       0       0       0
   284 ;;      Temps:          0       0       0       0       0
   285 ;;      Totals:         0       0       0       0       0
   286 ;;Total ram usage:        0 bytes
   287 ;; Hardware stack levels required when called:    3
   288 ;; This function calls:
   289 ;;		_Forbit_init
   290 ;;		_Fourbitcmd
   291 ;;		_print
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           
   298                           ;psect for function _main
   299  0762                     _main:	
   300  0762                     l710:	
   301                           ;incstack = 0
   302                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   303                           
   304                           
   305                           ;lcd.c: 87:     TRISB = 0x00;
   306  0762  1683               	bsf	3,5	;RP0=1, select bank1
   307  0763  1303               	bcf	3,6	;RP1=0, select bank1
   308  0764  0186               	clrf	6	;volatile
   309                           
   310                           ;lcd.c: 88:     TRISC = 0x00;
   311  0765  0187               	clrf	7	;volatile
   312                           
   313                           ;lcd.c: 90:     PORTB = 0x00;
   314  0766  1283               	bcf	3,5	;RP0=0, select bank0
   315  0767  1303               	bcf	3,6	;RP1=0, select bank0
   316  0768  0186               	clrf	6	;volatile
   317                           
   318                           ;lcd.c: 91:     PORTC = 0x00;
   319  0769  0187               	clrf	7	;volatile
   320  076A                     l712:	
   321                           
   322                           ;lcd.c: 96:     Forbit_init();
   323  076A  120A  118A  2749  120A  118A  	fcall	_Forbit_init
   324  076F                     l714:	
   325                           
   326                           ;lcd.c: 97:     Fourbitcmd(0x80);
   327  076F  3080               	movlw	128
   328  0770  120A  118A  27A4  120A  118A  	fcall	_Fourbitcmd
   329  0775                     l716:	
   330                           
   331                           ;lcd.c: 98:     print("Hello ");
   332  0775  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   333  0776  120A  118A  277F  120A  118A  	fcall	_print
   334  077B                     l45:	
   335                           ;lcd.c: 102:     while(1);
   336                           
   337  077B                     l46:	
   338  077B  2F7B               	goto	l45
   339  077C  120A  118A  2800   	ljmp	start
   340  077F                     __end_of_main:	
   341                           
   342                           	psect	text1
   343  077F                     __ptext1:	
   344 ;; *************** function _print *****************
   345 ;; Defined at:
   346 ;;		line 73 in file "lcd.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;  data            1    wreg     PTR unsigned char 
   349 ;;		 -> STR_1(7), 
   350 ;; Auto vars:     Size  Location     Type
   351 ;;  data            1    7[COMMON] PTR unsigned char 
   352 ;;		 -> STR_1(7), 
   353 ;;  i               2    5[COMMON] int 
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   363 ;;      Params:         0       0       0       0       0
   364 ;;      Locals:         3       0       0       0       0
   365 ;;      Temps:          0       0       0       0       0
   366 ;;      Totals:         3       0       0       0       0
   367 ;;Total ram usage:        3 bytes
   368 ;; Hardware stack levels used:    1
   369 ;; Hardware stack levels required when called:    2
   370 ;; This function calls:
   371 ;;		_Forbitdata
   372 ;; This function is called by:
   373 ;;		_main
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377                           
   378                           ;psect for function _print
   379  077F                     _print:	
   380                           
   381                           ;incstack = 0
   382                           ; Regs used in _print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   383                           ;print@data stored from wreg
   384  077F  00F7               	movwf	print@data
   385  0780                     l702:	
   386                           
   387                           ;lcd.c: 75:     for(int i=0;data[i]!='\0';i++){
   388  0780  01F5               	clrf	print@i
   389  0781  01F6               	clrf	print@i+1
   390  0782  2F96               	goto	l708
   391  0783                     l704:	
   392                           
   393                           ;lcd.c: 81:         Forbitdata(data[i]);
   394  0783  0875               	movf	print@i,w
   395  0784  0777               	addwf	print@data,w
   396  0785  0084               	movwf	4
   397  0786  120A  118A  2003  120A  118A  	fcall	stringdir
   398  078B  120A  118A  27D0  120A  118A  	fcall	_Forbitdata
   399  0790                     l706:	
   400                           
   401                           ;lcd.c: 83:     }
   402  0790  3001               	movlw	1
   403  0791  07F5               	addwf	print@i,f
   404  0792  1803               	skipnc
   405  0793  0AF6               	incf	print@i+1,f
   406  0794  3000               	movlw	0
   407  0795  07F6               	addwf	print@i+1,f
   408  0796                     l708:	
   409  0796  0875               	movf	print@i,w
   410  0797  0777               	addwf	print@data,w
   411  0798  0084               	movwf	4
   412  0799  120A  118A  2003  120A  118A  	fcall	stringdir
   413  079E  3A00               	xorlw	0
   414  079F  1D03               	skipz
   415  07A0  2FA2               	goto	u41
   416  07A1  2FA3               	goto	u40
   417  07A2                     u41:	
   418  07A2  2F83               	goto	l704
   419  07A3                     u40:	
   420  07A3                     l40:	
   421  07A3  0008               	return
   422  07A4                     __end_of_print:	
   423                           
   424                           	psect	text2
   425  07D0                     __ptext2:	
   426 ;; *************** function _Forbitdata *****************
   427 ;; Defined at:
   428 ;;		line 121 in file "lcd.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;  b               1    wreg     unsigned char 
   431 ;; Auto vars:     Size  Location     Type
   432 ;;  b               1    4[COMMON] unsigned char 
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, status,2, status,0, pclath, cstack
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   442 ;;      Params:         0       0       0       0       0
   443 ;;      Locals:         1       0       0       0       0
   444 ;;      Temps:          2       0       0       0       0
   445 ;;      Totals:         3       0       0       0       0
   446 ;;Total ram usage:        3 bytes
   447 ;; Hardware stack levels used:    1
   448 ;; Hardware stack levels required when called:    1
   449 ;; This function calls:
   450 ;;		_lcd_enable
   451 ;; This function is called by:
   452 ;;		_print
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           
   457                           ;psect for function _Forbitdata
   458  07D0                     _Forbitdata:	
   459                           
   460                           ;incstack = 0
   461                           ; Regs used in _Forbitdata: [wreg+status,2+status,0+pclath+cstack]
   462                           ;Forbitdata@b stored from wreg
   463  07D0  00F4               	movwf	Forbitdata@b
   464  07D1                     l664:	
   465                           
   466                           ;lcd.c: 121: void Forbitdata(unsigned char b);lcd.c: 122: {;lcd.c: 123:     RB0=1;
   467  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   468  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   469  07D3  1406               	bsf	6,0	;volatile
   470  07D4                     l666:	
   471                           
   472                           ;lcd.c: 125:     PORTC&=0x0F;
   473  07D4  300F               	movlw	15
   474  07D5  00F2               	movwf	??_Forbitdata
   475  07D6  0872               	movf	??_Forbitdata,w
   476  07D7  0587               	andwf	7,f	;volatile
   477                           
   478                           ;lcd.c: 126:     PORTC|=(b&0xf0);
   479  07D8  0874               	movf	Forbitdata@b,w
   480  07D9  39F0               	andlw	240
   481  07DA  00F2               	movwf	??_Forbitdata
   482  07DB  0872               	movf	??_Forbitdata,w
   483  07DC  0487               	iorwf	7,f	;volatile
   484  07DD                     l668:	
   485                           
   486                           ;lcd.c: 128:    lcd_enable();
   487  07DD  120A  118A  273A  120A  118A  	fcall	_lcd_enable
   488  07E2                     l670:	
   489                           
   490                           ;lcd.c: 130:     PORTC&=0x0f;
   491  07E2  300F               	movlw	15
   492  07E3  00F2               	movwf	??_Forbitdata
   493  07E4  0872               	movf	??_Forbitdata,w
   494  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   495  07E6  1303               	bcf	3,6	;RP1=0, select bank0
   496  07E7  0587               	andwf	7,f	;volatile
   497  07E8                     l672:	
   498                           
   499                           ;lcd.c: 131:     PORTC|=(b<<4&0xf0);
   500  07E8  0874               	movf	Forbitdata@b,w
   501  07E9  00F2               	movwf	??_Forbitdata
   502  07EA  3003               	movlw	3
   503  07EB                     u25:	
   504  07EB  1003               	clrc
   505  07EC  0DF2               	rlf	??_Forbitdata,f
   506  07ED  3EFF               	addlw	-1
   507  07EE  1D03               	skipz
   508  07EF  2FEB               	goto	u25
   509  07F0  1003               	clrc
   510  07F1  0D72               	rlf	??_Forbitdata,w
   511  07F2  39F0               	andlw	240
   512  07F3  00F3               	movwf	??_Forbitdata+1
   513  07F4  0873               	movf	??_Forbitdata+1,w
   514  07F5  0487               	iorwf	7,f	;volatile
   515  07F6                     l674:	
   516                           
   517                           ;lcd.c: 133:     lcd_enable();
   518  07F6  120A  118A  273A  120A  118A  	fcall	_lcd_enable
   519  07FB                     l54:	
   520  07FB  0008               	return
   521  07FC                     __end_of_Forbitdata:	
   522                           
   523                           	psect	text3
   524  0749                     __ptext3:	
   525 ;; *************** function _Forbit_init *****************
   526 ;; Defined at:
   527 ;;		line 57 in file "lcd.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, status,2, status,0, pclath, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   541 ;;      Params:         0       0       0       0       0
   542 ;;      Locals:         0       0       0       0       0
   543 ;;      Temps:          0       0       0       0       0
   544 ;;      Totals:         0       0       0       0       0
   545 ;;Total ram usage:        0 bytes
   546 ;; Hardware stack levels used:    1
   547 ;; Hardware stack levels required when called:    2
   548 ;; This function calls:
   549 ;;		_Fourbitcmd
   550 ;; This function is called by:
   551 ;;		_main
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           
   556                           ;psect for function _Forbit_init
   557  0749                     _Forbit_init:	
   558  0749                     l676:	
   559                           ;incstack = 0
   560                           ; Regs used in _Forbit_init: [wreg+status,2+status,0+pclath+cstack]
   561                           
   562                           
   563                           ;lcd.c: 59:   Fourbitcmd(0x02);
   564  0749  3002               	movlw	2
   565  074A  120A  118A  27A4  120A  118A  	fcall	_Fourbitcmd
   566                           
   567                           ;lcd.c: 60:     Fourbitcmd(0x28);
   568  074F  3028               	movlw	40
   569  0750  120A  118A  27A4  120A  118A  	fcall	_Fourbitcmd
   570                           
   571                           ;lcd.c: 61:     Fourbitcmd(0x0c);
   572  0755  300C               	movlw	12
   573  0756  120A  118A  27A4  120A  118A  	fcall	_Fourbitcmd
   574                           
   575                           ;lcd.c: 62:     Fourbitcmd(0x06);
   576  075B  3006               	movlw	6
   577  075C  120A  118A  27A4  120A  118A  	fcall	_Fourbitcmd
   578  0761                     l31:	
   579  0761  0008               	return
   580  0762                     __end_of_Forbit_init:	
   581                           
   582                           	psect	text4
   583  07A4                     __ptext4:	
   584 ;; *************** function _Fourbitcmd *****************
   585 ;; Defined at:
   586 ;;		line 107 in file "lcd.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;  a               1    wreg     unsigned char 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  a               1    4[COMMON] unsigned char 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0, pclath, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         1       0       0       0       0
   602 ;;      Temps:          2       0       0       0       0
   603 ;;      Totals:         3       0       0       0       0
   604 ;;Total ram usage:        3 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; Hardware stack levels required when called:    1
   607 ;; This function calls:
   608 ;;		_lcd_enable
   609 ;; This function is called by:
   610 ;;		_Forbit_init
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           
   616                           ;psect for function _Fourbitcmd
   617  07A4                     _Fourbitcmd:	
   618                           
   619                           ;incstack = 0
   620                           ; Regs used in _Fourbitcmd: [wreg+status,2+status,0+pclath+cstack]
   621                           ;Fourbitcmd@a stored from wreg
   622  07A4  00F4               	movwf	Fourbitcmd@a
   623  07A5                     l652:	
   624                           
   625                           ;lcd.c: 107: void Fourbitcmd(unsigned char a);lcd.c: 108: {;lcd.c: 109:     RB0=0;
   626  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   627  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   628  07A7  1006               	bcf	6,0	;volatile
   629  07A8                     l654:	
   630                           
   631                           ;lcd.c: 110:     PORTC&=0x0F;
   632  07A8  300F               	movlw	15
   633  07A9  00F2               	movwf	??_Fourbitcmd
   634  07AA  0872               	movf	??_Fourbitcmd,w
   635  07AB  0587               	andwf	7,f	;volatile
   636                           
   637                           ;lcd.c: 111:     PORTC|=(a&0xf0);
   638  07AC  0874               	movf	Fourbitcmd@a,w
   639  07AD  39F0               	andlw	240
   640  07AE  00F2               	movwf	??_Fourbitcmd
   641  07AF  0872               	movf	??_Fourbitcmd,w
   642  07B0  0487               	iorwf	7,f	;volatile
   643  07B1                     l656:	
   644                           
   645                           ;lcd.c: 113:     lcd_enable();
   646  07B1  120A  118A  273A  120A  118A  	fcall	_lcd_enable
   647  07B6                     l658:	
   648                           
   649                           ;lcd.c: 115:     PORTC&=0x0f;
   650  07B6  300F               	movlw	15
   651  07B7  00F2               	movwf	??_Fourbitcmd
   652  07B8  0872               	movf	??_Fourbitcmd,w
   653  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   654  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   655  07BB  0587               	andwf	7,f	;volatile
   656  07BC                     l660:	
   657                           
   658                           ;lcd.c: 116:     PORTC|=(a<<4&0xf0);
   659  07BC  0874               	movf	Fourbitcmd@a,w
   660  07BD  00F2               	movwf	??_Fourbitcmd
   661  07BE  3003               	movlw	3
   662  07BF                     u15:	
   663  07BF  1003               	clrc
   664  07C0  0DF2               	rlf	??_Fourbitcmd,f
   665  07C1  3EFF               	addlw	-1
   666  07C2  1D03               	skipz
   667  07C3  2FBF               	goto	u15
   668  07C4  1003               	clrc
   669  07C5  0D72               	rlf	??_Fourbitcmd,w
   670  07C6  39F0               	andlw	240
   671  07C7  00F3               	movwf	??_Fourbitcmd+1
   672  07C8  0873               	movf	??_Fourbitcmd+1,w
   673  07C9  0487               	iorwf	7,f	;volatile
   674  07CA                     l662:	
   675                           
   676                           ;lcd.c: 118:     lcd_enable();
   677  07CA  120A  118A  273A  120A  118A  	fcall	_lcd_enable
   678  07CF                     l51:	
   679  07CF  0008               	return
   680  07D0                     __end_of_Fourbitcmd:	
   681                           
   682                           	psect	text5
   683  073A                     __ptext5:	
   684 ;; *************** function _lcd_enable *****************
   685 ;; Defined at:
   686 ;;		line 66 in file "lcd.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   700 ;;      Params:         0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0
   702 ;;      Temps:          2       0       0       0       0
   703 ;;      Totals:         2       0       0       0       0
   704 ;;Total ram usage:        2 bytes
   705 ;; Hardware stack levels used:    1
   706 ;; This function calls:
   707 ;;		Nothing
   708 ;; This function is called by:
   709 ;;		_Fourbitcmd
   710 ;;		_Forbitdata
   711 ;;		_lcd_cmd
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function _lcd_enable
   717  073A                     _lcd_enable:	
   718  073A                     l646:	
   719                           ;incstack = 0
   720                           ; Regs used in _lcd_enable: [wreg]
   721                           
   722                           
   723                           ;lcd.c: 67:     RB2 = 1;
   724  073A  1283               	bcf	3,5	;RP0=0, select bank0
   725  073B  1303               	bcf	3,6	;RP1=0, select bank0
   726  073C  1506               	bsf	6,2	;volatile
   727  073D                     l648:	
   728                           
   729                           ;lcd.c: 68:     _delay((unsigned long)((30)*(4000000/4000.0)));
   730  073D  3027               	movlw	39
   731  073E  00F1               	movwf	??_lcd_enable+1
   732  073F  30F5               	movlw	245
   733  0740  00F0               	movwf	??_lcd_enable
   734  0741                     u57:	
   735  0741  0BF0               	decfsz	??_lcd_enable,f
   736  0742  2F41               	goto	u57
   737  0743  0BF1               	decfsz	??_lcd_enable+1,f
   738  0744  2F41               	goto	u57
   739  0745                     l650:	
   740                           
   741                           ;lcd.c: 69:     RB2 = 0;
   742  0745  1283               	bcf	3,5	;RP0=0, select bank0
   743  0746  1303               	bcf	3,6	;RP1=0, select bank0
   744  0747  1106               	bcf	6,2	;volatile
   745  0748                     l34:	
   746  0748  0008               	return
   747  0749                     __end_of_lcd_enable:	
   748  007E                     btemp	set	126	;btemp
   749  007E                     wtemp0	set	126


Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    print@data	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->_print
    _print->_Forbitdata
    _Forbitdata->_lcd_enable
    _Forbit_init->_Fourbitcmd
    _Fourbitcmd->_lcd_enable

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     213
                        _Forbit_init
                         _Fourbitcmd
                              _print
 ---------------------------------------------------------------------------------
 (1) _print                                                3     3      0     153
                                              5 COMMON     3     3      0
                         _Forbitdata
 ---------------------------------------------------------------------------------
 (2) _Forbitdata                                           3     3      0      30
                                              2 COMMON     3     3      0
                         _lcd_enable
 ---------------------------------------------------------------------------------
 (1) _Forbit_init                                          0     0      0      30
                         _Fourbitcmd
 ---------------------------------------------------------------------------------
 (1) _Fourbitcmd                                           3     3      0      30
                                              2 COMMON     3     3      0
                         _lcd_enable
 ---------------------------------------------------------------------------------
 (3) _lcd_enable                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Forbit_init
     _Fourbitcmd
       _lcd_enable
   _Fourbitcmd
     _lcd_enable
   _print
     _Forbitdata
       _lcd_enable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu May 22 19:55:07 2025

                      pc 0002              __CFG_CP$OFF 0000                       l31 0761  
                     l40 07A3                       l34 0748                       l51 07CF  
                     l45 077B                       l54 07FB                       l46 077B  
                     u15 07BF                       u40 07A3                       u25 07EB  
                     u41 07A2                       u57 0741                       fsr 0004  
            __CFG_LVP$ON 0000                      l702 0780                      l710 0762  
                    l704 0783                      l712 076A                      l650 0745  
                    l706 0790                      l714 076F                      l660 07BC  
                    l652 07A5                      l708 0796                      l716 0775  
                    l646 073A                      l662 07CA                      l654 07A8  
                    l670 07E2                      l648 073D                      l656 07B1  
                    l672 07E8                      l664 07D1                      l658 07B6  
                    l674 07F6                      l666 07D4                      l676 0749  
                    l668 07DD                      _RB0 0030                      _RB1 0031  
                    _RB2 0032             __CFG_CPD$OFF 0000                      fsr0 0004  
                   STR_1 0009             __CFG_WDTE$ON 0000             __CFG_WRT$OFF 0000  
                   _main 0762            ??_Forbit_init 0075                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000              Forbitdata@b 0074  
                  ?_main 0070                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    _print 077F  
                  pclath 000A                    status 0003                    wtemp0 007E  
             _Forbitdata 07D0          __initialization 07FC             __end_of_main 077F  
    __end_of_Forbit_init 0762               _Fourbitcmd 07A4                   ??_main 0078  
            Fourbitcmd@a 0074                   ?_print 0070           __CFG_PWRTE$OFF 0000  
                 print@i 0075          __CFG_FOSC$EXTRC 0000  __end_of__initialization 07FC  
            _Forbit_init 0749              ?_Forbitdata 0070           __pcstackCOMMON 0070  
          __end_of_print 07A4              ?_Fourbitcmd 0070                  ??_print 0075  
             __pmaintext 0762               _lcd_enable 073A      __size_of_Forbitdata 002C  
             __stringtab 0003      __size_of_Fourbitcmd 002C                  __ptext1 077F  
                __ptext2 07D0                  __ptext3 0749                  __ptext4 07A4  
                __ptext5 073A     end_of_initialization 07FC              ?_lcd_enable 0070  
           ?_Forbit_init 0070             ??_Forbitdata 0072             ??_Fourbitcmd 0072  
    start_initialization 07FC       __end_of_Forbitdata 07FC       __end_of_Fourbitcmd 07D0  
    __size_of_lcd_enable 000F                ___latbits 0002                __pstrings 0003  
         __size_of_print 0025     __size_of_Forbit_init 0019              __stringbase 0008  
           ??_lcd_enable 0070       __end_of_lcd_enable 0749       __end_of__stringtab 0009  
          __size_of_main 001D                print@data 0077                stringcode 0003  
               stringdir 0003                 stringtab 0003  
