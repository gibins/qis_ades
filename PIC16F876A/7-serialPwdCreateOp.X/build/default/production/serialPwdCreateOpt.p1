Version 4.0 HI-TECH Software Intermediate Code
"1774 D:\pic\include\pic16f876a.h
[; ;D:\pic\include\pic16f876a.h: 1774: extern volatile unsigned char TXSTA __attribute__((address(0x098)));
[v _TXSTA `Vuc ~T0 @X0 0 e@152 ]
"864
[; ;D:\pic\include\pic16f876a.h: 864: extern volatile unsigned char RCSTA __attribute__((address(0x018)));
[v _RCSTA `Vuc ~T0 @X0 0 e@24 ]
"1855
[; ;D:\pic\include\pic16f876a.h: 1855: extern volatile unsigned char SPBRG __attribute__((address(0x099)));
[v _SPBRG `Vuc ~T0 @X0 0 e@153 ]
"959
[; ;D:\pic\include\pic16f876a.h: 959: extern volatile unsigned char TXREG __attribute__((address(0x019)));
[v _TXREG `Vuc ~T0 @X0 0 e@25 ]
"2707
[; ;D:\pic\include\pic16f876a.h: 2707: extern volatile __bit TRMT __attribute__((address(0x4C1)));
[v _TRMT `Vb ~T0 @X0 0 e@1217 ]
"2500
[; ;D:\pic\include\pic16f876a.h: 2500: extern volatile __bit RCIF __attribute__((address(0x65)));
[v _RCIF `Vb ~T0 @X0 0 e@101 ]
"966
[; ;D:\pic\include\pic16f876a.h: 966: extern volatile unsigned char RCREG __attribute__((address(0x01A)));
[v _RCREG `Vuc ~T0 @X0 0 e@26 ]
"56 D:\pic\include\c90\string.h
[; ;D:\pic\include\c90\string.h: 56: extern size_t strlen(const char *);
[v _strlen `(ui ~T0 @X0 0 ef1`*Cuc ]
"45
[; ;D:\pic\include\c90\string.h: 45: extern int strcmp(const char *, const char *);
[v _strcmp `(i ~T0 @X0 0 ef2`*Cuc`*Cuc ]
[p mainexit ]
"7 serialPwdCreateOpt.c
[p x FOSC = EXTRC ]
"8
[p x WDTE = OFF ]
"9
[p x PWRTE = OFF ]
"10
[p x BOREN = ON ]
"11
[p x LVP = ON ]
"12
[p x CPD = OFF ]
"13
[p x WRT = OFF ]
"14
[p x CP = OFF ]
"54 D:\pic\include\pic16f876a.h
[; ;D:\pic\include\pic16f876a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;D:\pic\include\pic16f876a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;D:\pic\include\pic16f876a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;D:\pic\include\pic16f876a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;D:\pic\include\pic16f876a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;D:\pic\include\pic16f876a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;D:\pic\include\pic16f876a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;D:\pic\include\pic16f876a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;D:\pic\include\pic16f876a.h: 342: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"362
[; ;D:\pic\include\pic16f876a.h: 362: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"440
[; ;D:\pic\include\pic16f876a.h: 440: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"496
[; ;D:\pic\include\pic16f876a.h: 496: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"536
[; ;D:\pic\include\pic16f876a.h: 536: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"543
[; ;D:\pic\include\pic16f876a.h: 543: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"550
[; ;D:\pic\include\pic16f876a.h: 550: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"557
[; ;D:\pic\include\pic16f876a.h: 557: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"632
[; ;D:\pic\include\pic16f876a.h: 632: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"639
[; ;D:\pic\include\pic16f876a.h: 639: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"710
[; ;D:\pic\include\pic16f876a.h: 710: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"717
[; ;D:\pic\include\pic16f876a.h: 717: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"787
[; ;D:\pic\include\pic16f876a.h: 787: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"794
[; ;D:\pic\include\pic16f876a.h: 794: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"801
[; ;D:\pic\include\pic16f876a.h: 801: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"808
[; ;D:\pic\include\pic16f876a.h: 808: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"866
[; ;D:\pic\include\pic16f876a.h: 866: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"961
[; ;D:\pic\include\pic16f876a.h: 961: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"968
[; ;D:\pic\include\pic16f876a.h: 968: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"975
[; ;D:\pic\include\pic16f876a.h: 975: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"982
[; ;D:\pic\include\pic16f876a.h: 982: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"989
[; ;D:\pic\include\pic16f876a.h: 989: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"996
[; ;D:\pic\include\pic16f876a.h: 996: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1054
[; ;D:\pic\include\pic16f876a.h: 1054: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1061
[; ;D:\pic\include\pic16f876a.h: 1061: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1157
[; ;D:\pic\include\pic16f876a.h: 1157: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1227
[; ;D:\pic\include\pic16f876a.h: 1227: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1277
[; ;D:\pic\include\pic16f876a.h: 1277: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1339
[; ;D:\pic\include\pic16f876a.h: 1339: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1401
[; ;D:\pic\include\pic16f876a.h: 1401: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1457
[; ;D:\pic\include\pic16f876a.h: 1457: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1497
[; ;D:\pic\include\pic16f876a.h: 1497: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1531
[; ;D:\pic\include\pic16f876a.h: 1531: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1593
[; ;D:\pic\include\pic16f876a.h: 1593: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1600
[; ;D:\pic\include\pic16f876a.h: 1600: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1607
[; ;D:\pic\include\pic16f876a.h: 1607: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"1776
[; ;D:\pic\include\pic16f876a.h: 1776: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"1857
[; ;D:\pic\include\pic16f876a.h: 1857: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"1864
[; ;D:\pic\include\pic16f876a.h: 1864: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"1934
[; ;D:\pic\include\pic16f876a.h: 1934: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"1999
[; ;D:\pic\include\pic16f876a.h: 1999: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2006
[; ;D:\pic\include\pic16f876a.h: 2006: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2065
[; ;D:\pic\include\pic16f876a.h: 2065: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2072
[; ;D:\pic\include\pic16f876a.h: 2072: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2079
[; ;D:\pic\include\pic16f876a.h: 2079: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2086
[; ;D:\pic\include\pic16f876a.h: 2086: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2093
[; ;D:\pic\include\pic16f876a.h: 2093: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2138
[; ;D:\pic\include\pic16f876a.h: 2138: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"32 serialPwdCreateOpt.c
[; ;serialPwdCreateOpt.c: 32: char *userPassword[40];
[v _userPassword `*uc ~T0 @X0 -> 40 `i e ]
"33
[; ;serialPwdCreateOpt.c: 33: int resetMode = 0;
[v _resetMode `i ~T0 @X0 1 e ]
[i _resetMode
-> 0 `i
]
"35
[; ;serialPwdCreateOpt.c: 35: void configRegistres() {
[v _configRegistres `(v ~T0 @X0 1 ef ]
{
[e :U _configRegistres ]
[f ]
"37
[; ;serialPwdCreateOpt.c: 37:     TXSTA = 0x24;
[e = _TXSTA -> -> 36 `i `uc ]
"38
[; ;serialPwdCreateOpt.c: 38:     RCSTA = 0x90;
[e = _RCSTA -> -> 144 `i `uc ]
"39
[; ;serialPwdCreateOpt.c: 39:     SPBRG = 25;
[e = _SPBRG -> -> 25 `i `uc ]
"41
[; ;serialPwdCreateOpt.c: 41: }
[e :UE 87 ]
}
"43
[; ;serialPwdCreateOpt.c: 43: void printMessage(char *message) {
[v _printMessage `(v ~T0 @X0 1 ef1`*uc ]
{
[e :U _printMessage ]
[v _message `*uc ~T0 @X0 1 r1 ]
[f ]
"45
[; ;serialPwdCreateOpt.c: 45:     for (int i = 0; message[i] != '\0'; i++) {
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $U 92  ]
[e :U 89 ]
{
"46
[; ;serialPwdCreateOpt.c: 46:         TXREG = message[i];
[e = _TXREG -> *U + _message * -> _i `x -> -> # *U _message `i `x `uc ]
"47
[; ;serialPwdCreateOpt.c: 47:         while (TRMT == 0);
[e $U 93  ]
[e :U 94 ]
[e :U 93 ]
[e $ == -> _TRMT `i -> 0 `i 94  ]
[e :U 95 ]
"48
[; ;serialPwdCreateOpt.c: 48:     }
}
[e ++ _i -> 1 `i ]
[e :U 92 ]
[e $ != -> *U + _message * -> _i `x -> -> # *U _message `i `x `ui -> 0 `ui 89  ]
[e :U 90 ]
}
"50
[; ;serialPwdCreateOpt.c: 50: }
[e :UE 88 ]
}
"52
[; ;serialPwdCreateOpt.c: 52: char receiveCharacter() {
[v _receiveCharacter `(uc ~T0 @X0 1 ef ]
{
[e :U _receiveCharacter ]
[f ]
"54
[; ;serialPwdCreateOpt.c: 54:     while (RCIF == 0);
[e $U 97  ]
[e :U 98 ]
[e :U 97 ]
[e $ == -> _RCIF `i -> 0 `i 98  ]
[e :U 99 ]
"55
[; ;serialPwdCreateOpt.c: 55:     return RCREG;
[e ) -> _RCREG `uc ]
[e $UE 96  ]
"57
[; ;serialPwdCreateOpt.c: 57: }
[e :UE 96 ]
}
"59
[; ;serialPwdCreateOpt.c: 59: void readMessage(char *message) {
[v _readMessage `(v ~T0 @X0 1 ef1`*uc ]
{
[e :U _readMessage ]
[v _message `*uc ~T0 @X0 1 r1 ]
[f ]
"61
[; ;serialPwdCreateOpt.c: 61:     for (int i = 0;; i++) {
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e :U 101 ]
{
"62
[; ;serialPwdCreateOpt.c: 62:         message[i] = receiveCharacter();
[e = *U + _message * -> _i `x -> -> # *U _message `i `x ( _receiveCharacter ..  ]
"63
[; ;serialPwdCreateOpt.c: 63:         if (message[i] == '\r') {
[e $ ! == -> *U + _message * -> _i `x -> -> # *U _message `i `x `ui -> 13 `ui 104  ]
{
"64
[; ;serialPwdCreateOpt.c: 64:             message[i] = '\0';
[e = *U + _message * -> _i `x -> -> # *U _message `i `x -> -> 0 `ui `uc ]
"65
[; ;serialPwdCreateOpt.c: 65:             break;
[e $U 102  ]
"66
[; ;serialPwdCreateOpt.c: 66:         }
}
[e :U 104 ]
"67
[; ;serialPwdCreateOpt.c: 67:         printMessage("*");
[e ( _printMessage (1 :s 1C ]
"68
[; ;serialPwdCreateOpt.c: 68:     }
}
[e ++ _i -> 1 `i ]
[e $U 101  ]
[e :U 102 ]
}
"70
[; ;serialPwdCreateOpt.c: 70: }
[e :UE 100 ]
}
"72
[; ;serialPwdCreateOpt.c: 72: void createPassword() {
[v _createPassword `(v ~T0 @X0 1 ef ]
{
[e :U _createPassword ]
[f ]
"74
[; ;serialPwdCreateOpt.c: 74:     if (strlen(userPassword) == 0 ) {
[e $ ! == ( _strlen (1 -> &U _userPassword `*Cuc -> -> 0 `i `ui 106  ]
{
"75
[; ;serialPwdCreateOpt.c: 75:         printMessage("\r Enter New Password \r");
[e ( _printMessage (1 :s 2C ]
"76
[; ;serialPwdCreateOpt.c: 76:         readMessage(userPassword);
[e ( _readMessage (1 -> &U _userPassword `*uc ]
"78
[; ;serialPwdCreateOpt.c: 78:         if (strcmp(userPassword, (0))) {
[e $ ! != ( _strcmp (2 , -> &U _userPassword `*Cuc -> -> 0 `i `*Cuc -> 0 `i 107  ]
{
"79
[; ;serialPwdCreateOpt.c: 79:            resetMode = 1;
[e = _resetMode -> 1 `i ]
"80
[; ;serialPwdCreateOpt.c: 80:             printMessage("\r User password updated successfully \r");
[e ( _printMessage (1 :s 3C ]
"81
[; ;serialPwdCreateOpt.c: 81:         } else {
}
[e $U 108  ]
[e :U 107 ]
{
"82
[; ;serialPwdCreateOpt.c: 82:             printMessage("\r Unable to update user password Contact support \r");
[e ( _printMessage (1 :s 4C ]
"83
[; ;serialPwdCreateOpt.c: 83:         }
}
[e :U 108 ]
"84
[; ;serialPwdCreateOpt.c: 84:     }
}
[e :U 106 ]
"85
[; ;serialPwdCreateOpt.c: 85:     printMessage("\r Reset Mode ");
[e ( _printMessage (1 :s 5C ]
"86
[; ;serialPwdCreateOpt.c: 86:     printMessage(resetMode);
[e ( _printMessage (1 -> _resetMode `*uc ]
"87
[; ;serialPwdCreateOpt.c: 87:     printMessage("\r Password Hint ");
[e ( _printMessage (1 :s 6C ]
"88
[; ;serialPwdCreateOpt.c: 88:     printMessage(strlen(userPassword));
[e ( _printMessage (1 -> ( _strlen (1 -> &U _userPassword `*Cuc `*uc ]
"89
[; ;serialPwdCreateOpt.c: 89: }
[e :UE 105 ]
}
"91
[; ;serialPwdCreateOpt.c: 91: void validatePassword(char *password) {
[v _validatePassword `(v ~T0 @X0 1 ef1`*uc ]
{
[e :U _validatePassword ]
[v _password `*uc ~T0 @X0 1 r1 ]
[f ]
"92
[; ;serialPwdCreateOpt.c: 92:     char *stockPassword = "123456";
[v _stockPassword `*uc ~T0 @X0 1 a ]
[e = _stockPassword :s 7C ]
"97
[; ;serialPwdCreateOpt.c: 97:     if (!strcmp(userPassword, "")) {
[e $ ! ! != ( _strcmp (2 , -> &U _userPassword `*Cuc :s 9C -> 0 `i 110  ]
{
"99
[; ;serialPwdCreateOpt.c: 99:         if (!strcmp(password, stockPassword)) {
[e $ ! ! != ( _strcmp (2 , -> _password `*Cuc -> _stockPassword `*Cuc -> 0 `i 111  ]
{
"100
[; ;serialPwdCreateOpt.c: 100:             printMessage("\r Authentication Successful!!!\r");
[e ( _printMessage (1 :s 10C ]
"101
[; ;serialPwdCreateOpt.c: 101:         } else {
}
[e $U 112  ]
[e :U 111 ]
{
"102
[; ;serialPwdCreateOpt.c: 102:             printMessage("\r Authentication Failed!!!\r");
[e ( _printMessage (1 :s 11C ]
"103
[; ;serialPwdCreateOpt.c: 103:         }
}
[e :U 112 ]
"104
[; ;serialPwdCreateOpt.c: 104:     } else {
}
[e $U 113  ]
[e :U 110 ]
{
"105
[; ;serialPwdCreateOpt.c: 105:         if (!strcmp(password, userPassword)) {
[e $ ! ! != ( _strcmp (2 , -> _password `*Cuc -> &U _userPassword `*Cuc -> 0 `i 114  ]
{
"106
[; ;serialPwdCreateOpt.c: 106:             printMessage("\r Authentication Successful!!!\r");
[e ( _printMessage (1 :s 12C ]
"107
[; ;serialPwdCreateOpt.c: 107:         } else {
}
[e $U 115  ]
[e :U 114 ]
{
"108
[; ;serialPwdCreateOpt.c: 108:             printMessage("\r Authentication Failed!!!\r");
[e ( _printMessage (1 :s 13C ]
"109
[; ;serialPwdCreateOpt.c: 109:         }
}
[e :U 115 ]
"110
[; ;serialPwdCreateOpt.c: 110:     }
}
[e :U 113 ]
"112
[; ;serialPwdCreateOpt.c: 112: }
[e :UE 109 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"114
[; ;serialPwdCreateOpt.c: 114: void main(void) {
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"116
[; ;serialPwdCreateOpt.c: 116:     char *serialBuffer[40];
[v _serialBuffer `*uc ~T0 @X0 -> 40 `i a ]
"118
[; ;serialPwdCreateOpt.c: 118:     configRegistres();
[e ( _configRegistres ..  ]
"119
[; ;serialPwdCreateOpt.c: 119:     if(resetMode == 0) {
[e $ ! == _resetMode -> 0 `i 117  ]
{
"120
[; ;serialPwdCreateOpt.c: 120:     createPassword();}
[e ( _createPassword ..  ]
}
[e :U 117 ]
"122
[; ;serialPwdCreateOpt.c: 122:     printMessage("\r Enter Password \r");
[e ( _printMessage (1 :s 14C ]
"123
[; ;serialPwdCreateOpt.c: 123:     readMessage(serialBuffer);
[e ( _readMessage (1 -> &U _serialBuffer `*uc ]
"125
[; ;serialPwdCreateOpt.c: 125:     validatePassword(serialBuffer);
[e ( _validatePassword (1 -> &U _serialBuffer `*uc ]
"127
[; ;serialPwdCreateOpt.c: 127:     return;
[e $UE 116  ]
"128
[; ;serialPwdCreateOpt.c: 128: }
[e :UE 116 ]
}
[a 7C 49 50 51 52 53 54 0 ]
[a 1C 42 0 ]
[a 6C 13 32 80 97 115 115 119 111 114 100 32 72 105 110 116 32 0 ]
[a 5C 13 32 82 101 115 101 116 32 77 111 100 101 32 0 ]
[a 10C 13 32 65 117 116 104 101 110 116 105 99 97 116 105 111 110 32 83 117 99 99 101 115 115 102 117 108 33 33 33 13 0 ]
[a 12C 13 32 65 117 116 104 101 110 116 105 99 97 116 105 111 110 32 83 117 99 99 101 115 115 102 117 108 33 33 33 13 0 ]
[a 11C 13 32 65 117 116 104 101 110 116 105 99 97 116 105 111 110 32 70 97 105 108 101 100 33 33 33 13 0 ]
[a 13C 13 32 65 117 116 104 101 110 116 105 99 97 116 105 111 110 32 70 97 105 108 101 100 33 33 33 13 0 ]
[a 3C 13 32 85 115 101 114 32 112 97 115 115 119 111 114 100 32 117 112 100 97 116 101 100 32 115 117 99 99 101 115 115 102 117 108 108 121 32 13 0 ]
[a 4C 13 32 85 110 97 98 108 101 32 116 111 32 117 112 100 97 116 101 32 117 115 101 114 32 112 97 115 115 119 111 114 100 32 67 111 110 116 97 99 116 32 115 117 112 112 111 114 116 32 13 0 ]
[a 2C 13 32 69 110 116 101 114 32 78 101 119 32 80 97 115 115 119 111 114 100 32 13 0 ]
[a 14C 13 32 69 110 116 101 114 32 80 97 115 115 119 111 114 100 32 13 0 ]
[a 8C 0 ]
[a 9C 0 ]
