

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jun 12 20:01:01 2025

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.10
    14                           ; Generated 31/07/2019 GMT
    15                           ; 
    16                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F876A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  008E                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0094                     	;# 
    91  0098                     	;# 
    92  0099                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  009F                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  010F                     	;# 
   101  018C                     	;# 
   102  018D                     	;# 
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  000A                     	;# 
   112  000B                     	;# 
   113  000C                     	;# 
   114  000D                     	;# 
   115  000E                     	;# 
   116  000E                     	;# 
   117  000F                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0014                     	;# 
   123  0015                     	;# 
   124  0015                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001B                     	;# 
   131  001B                     	;# 
   132  001C                     	;# 
   133  001D                     	;# 
   134  001E                     	;# 
   135  001F                     	;# 
   136  0081                     	;# 
   137  0085                     	;# 
   138  0086                     	;# 
   139  0087                     	;# 
   140  008C                     	;# 
   141  008D                     	;# 
   142  008E                     	;# 
   143  0091                     	;# 
   144  0092                     	;# 
   145  0093                     	;# 
   146  0094                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0007                     _PORTC	set	7
   160  0013                     _SSPBUF	set	19
   161  0014                     _SSPCON	set	20
   162  0019                     _TXREG	set	25
   163  001A                     _RCREG	set	26
   164  0018                     _RCSTA	set	24
   165  0063                     _SSPIF	set	99
   166  0065                     _RCIF	set	101
   167  0087                     _TRISC	set	135
   168  0094                     _SSPSTAT	set	148
   169  0099                     _SPBRG	set	153
   170  0098                     _TXSTA	set	152
   171  04C1                     _TRMT	set	1217
   172                           
   173                           ; #config settings
   174  0000                     
   175                           	psect	cinit
   176  07FC                     start_initialization:	
   177  07FC                     __initialization:	
   178  07FC                     end_of_initialization:	
   179                           ;End of C runtime variable initialization code
   180                           
   181  07FC                     __end_of__initialization:	
   182  07FC  0183               	clrf	3
   183  07FD  120A  118A  2FDD   	ljmp	_main	;jump to C main() function
   184                           
   185                           	psect	cstackCOMMON
   186  0070                     __pcstackCOMMON:	
   187  0070                     ?_uart_init:	
   188  0070                     ??_uart_init:	
   189                           ; 1 bytes @ 0x0
   190                           
   191  0070                     ?_uart_receive:	
   192                           ; 1 bytes @ 0x0
   193                           
   194  0070                     ??_uart_receive:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0070                     ?_spi_master_init:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0070                     ??_spi_master_init:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0070                     ?_send_to_spi:	
   204                           ; 1 bytes @ 0x0
   205                           
   206  0070                     ??_send_to_spi:	
   207                           ; 1 bytes @ 0x0
   208                           
   209  0070                     ?_main:	
   210                           ; 1 bytes @ 0x0
   211                           
   212                           
   213                           ; 1 bytes @ 0x0
   214  0070                     	ds	1
   215  0071                     uart_receive@ch:	
   216                           
   217                           ; 1 bytes @ 0x1
   218  0071                     	ds	1
   219  0072                     send_to_spi@ch:	
   220                           
   221                           ; 1 bytes @ 0x2
   222  0072                     	ds	1
   223  0073                     ??_main:	
   224                           
   225                           ; 1 bytes @ 0x3
   226  0073                     	ds	1
   227  0074                     main@uartBuffer:	
   228                           
   229                           ; 1 bytes @ 0x4
   230  0074                     	ds	1
   231                           
   232                           	psect	maintext
   233  07DD                     __pmaintext:	
   234 ;;
   235 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   236 ;;
   237 ;; *************** function _main *****************
   238 ;; Defined at:
   239 ;;		line 58 in file "spi.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;		None
   242 ;; Auto vars:     Size  Location     Type
   243 ;;  uartBuffer      1    4[COMMON] unsigned char 
   244 ;; Return value:  Size  Location     Type
   245 ;;                  1    wreg      void 
   246 ;; Registers used:
   247 ;;		wreg, status,2, status,0, pclath, cstack
   248 ;; Tracked objects:
   249 ;;		On entry : B00/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   253 ;;      Params:         0       0       0       0       0
   254 ;;      Locals:         1       0       0       0       0
   255 ;;      Temps:          1       0       0       0       0
   256 ;;      Totals:         2       0       0       0       0
   257 ;;Total ram usage:        2 bytes
   258 ;; Hardware stack levels required when called:    1
   259 ;; This function calls:
   260 ;;		_send_to_spi
   261 ;;		_spi_master_init
   262 ;;		_uart_init
   263 ;;		_uart_receive
   264 ;; This function is called by:
   265 ;;		Startup code after reset
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           
   270                           ;psect for function _main
   271  07DD                     _main:	
   272  07DD                     l669:	
   273                           ;incstack = 0
   274                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   275                           
   276                           
   277                           ;spi.c: 60:     PORTC = 0x00;
   278  07DD  1283               	bcf	3,5	;RP0=0, select bank0
   279  07DE  1303               	bcf	3,6	;RP1=0, select bank0
   280  07DF  0187               	clrf	7	;volatile
   281  07E0                     l671:	
   282                           
   283                           ;spi.c: 61:     uart_init();
   284  07E0  120A  118A  27A8  120A  118A  	fcall	_uart_init
   285  07E5                     l673:	
   286                           
   287                           ;spi.c: 62:     spi_master_init();
   288  07E5  120A  118A  279C  120A  118A  	fcall	_spi_master_init
   289  07EA                     l675:	
   290                           
   291                           ;spi.c: 73:     char uartBuffer = uart_receive();
   292  07EA  120A  118A  27C9  120A  118A  	fcall	_uart_receive
   293  07EF  00F3               	movwf	??_main
   294  07F0  0873               	movf	??_main,w
   295  07F1  00F4               	movwf	main@uartBuffer
   296  07F2                     l677:	
   297                           
   298                           ;spi.c: 74:     send_to_spi(uartBuffer);
   299  07F2  0874               	movf	main@uartBuffer,w
   300  07F3  120A  118A  27B5  120A  118A  	fcall	_send_to_spi
   301  07F8  2FEA               	goto	l675
   302  07F9  120A  118A  2800   	ljmp	start
   303  07FC                     __end_of_main:	
   304                           
   305                           	psect	text1
   306  07C9                     __ptext1:	
   307 ;; *************** function _uart_receive *****************
   308 ;; Defined at:
   309 ;;		line 31 in file "spi.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;		None
   312 ;; Auto vars:     Size  Location     Type
   313 ;;  ch              1    1[COMMON] unsigned char 
   314 ;; Return value:  Size  Location     Type
   315 ;;                  1    wreg      unsigned char 
   316 ;; Registers used:
   317 ;;		wreg
   318 ;; Tracked objects:
   319 ;;		On entry : 0/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   323 ;;      Params:         0       0       0       0       0
   324 ;;      Locals:         1       0       0       0       0
   325 ;;      Temps:          1       0       0       0       0
   326 ;;      Totals:         2       0       0       0       0
   327 ;;Total ram usage:        2 bytes
   328 ;; Hardware stack levels used:    1
   329 ;; This function calls:
   330 ;;		Nothing
   331 ;; This function is called by:
   332 ;;		_main
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           
   337                           ;psect for function _uart_receive
   338  07C9                     _uart_receive:	
   339  07C9                     l651:	
   340                           ;incstack = 0
   341                           ; Regs used in _uart_receive: [wreg]
   342                           
   343  07C9                     l34:	
   344                           ;spi.c: 33:     char ch;;spi.c: 34:     while (RCIF == 0);
   345                           
   346  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   347  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   348  07CB  1E8C               	btfss	12,5	;volatile
   349  07CC  2FCE               	goto	u11
   350  07CD  2FCF               	goto	u10
   351  07CE                     u11:	
   352  07CE  2FC9               	goto	l34
   353  07CF                     u10:	
   354  07CF                     l653:	
   355                           
   356                           ;spi.c: 35:     ch = RCREG;
   357  07CF  081A               	movf	26,w	;volatile
   358  07D0  00F0               	movwf	??_uart_receive
   359  07D1  0870               	movf	??_uart_receive,w
   360  07D2  00F1               	movwf	uart_receive@ch
   361                           
   362                           ;spi.c: 36:     TXREG = ch;
   363  07D3  0871               	movf	uart_receive@ch,w
   364  07D4  0099               	movwf	25	;volatile
   365  07D5                     l37:	
   366                           ;spi.c: 37:     while(TRMT == 0);
   367                           
   368  07D5  1683               	bsf	3,5	;RP0=1, select bank1
   369  07D6  1303               	bcf	3,6	;RP1=0, select bank1
   370  07D7  1C98               	btfss	24,1	;volatile
   371  07D8  2FDA               	goto	u21
   372  07D9  2FDB               	goto	u20
   373  07DA                     u21:	
   374  07DA  2FD5               	goto	l37
   375  07DB                     u20:	
   376  07DB                     l655:	
   377                           
   378                           ;spi.c: 39:     return ch;
   379  07DB  0871               	movf	uart_receive@ch,w
   380  07DC                     l40:	
   381  07DC  0008               	return
   382  07DD                     __end_of_uart_receive:	
   383                           
   384                           	psect	text2
   385  07A8                     __ptext2:	
   386 ;; *************** function _uart_init *****************
   387 ;; Defined at:
   388 ;;		line 24 in file "spi.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   402 ;;      Params:         0       0       0       0       0
   403 ;;      Locals:         0       0       0       0       0
   404 ;;      Temps:          0       0       0       0       0
   405 ;;      Totals:         0       0       0       0       0
   406 ;;Total ram usage:        0 bytes
   407 ;; Hardware stack levels used:    1
   408 ;; This function calls:
   409 ;;		Nothing
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           
   416                           ;psect for function _uart_init
   417  07A8                     _uart_init:	
   418  07A8                     l649:	
   419                           ;incstack = 0
   420                           ; Regs used in _uart_init: [wreg]
   421                           
   422                           
   423                           ;spi.c: 26:     TXSTA = 0x24;
   424  07A8  3024               	movlw	36
   425  07A9  1683               	bsf	3,5	;RP0=1, select bank1
   426  07AA  1303               	bcf	3,6	;RP1=0, select bank1
   427  07AB  0098               	movwf	24	;volatile
   428                           
   429                           ;spi.c: 27:     RCSTA = 0x90;
   430  07AC  3090               	movlw	144
   431  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   432  07AE  1303               	bcf	3,6	;RP1=0, select bank0
   433  07AF  0098               	movwf	24	;volatile
   434                           
   435                           ;spi.c: 28:     SPBRG = 25;
   436  07B0  3019               	movlw	25
   437  07B1  1683               	bsf	3,5	;RP0=1, select bank1
   438  07B2  1303               	bcf	3,6	;RP1=0, select bank1
   439  07B3  0099               	movwf	25	;volatile
   440  07B4                     l31:	
   441  07B4  0008               	return
   442  07B5                     __end_of_uart_init:	
   443                           
   444                           	psect	text3
   445  079C                     __ptext3:	
   446 ;; *************** function _spi_master_init *****************
   447 ;; Defined at:
   448 ;;		line 42 in file "spi.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;		None
   451 ;; Auto vars:     Size  Location     Type
   452 ;;		None
   453 ;; Return value:  Size  Location     Type
   454 ;;                  1    wreg      void 
   455 ;; Registers used:
   456 ;;		wreg, status,2
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   462 ;;      Params:         0       0       0       0       0
   463 ;;      Locals:         0       0       0       0       0
   464 ;;      Temps:          0       0       0       0       0
   465 ;;      Totals:         0       0       0       0       0
   466 ;;Total ram usage:        0 bytes
   467 ;; Hardware stack levels used:    1
   468 ;; This function calls:
   469 ;;		Nothing
   470 ;; This function is called by:
   471 ;;		_main
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           
   476                           ;psect for function _spi_master_init
   477  079C                     _spi_master_init:	
   478  079C                     l659:	
   479                           ;incstack = 0
   480                           ; Regs used in _spi_master_init: [wreg+status,2]
   481                           
   482                           
   483                           ;spi.c: 43:     SSPSTAT = 0x00;
   484  079C  1683               	bsf	3,5	;RP0=1, select bank1
   485  079D  1303               	bcf	3,6	;RP1=0, select bank1
   486  079E  0194               	clrf	20	;volatile
   487  079F                     l661:	
   488                           
   489                           ;spi.c: 44:     SSPCON = 0x20;
   490  079F  3020               	movlw	32
   491  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   492  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   493  07A2  0094               	movwf	20	;volatile
   494  07A3                     l663:	
   495                           
   496                           ;spi.c: 46:     TRISC = (1<<4);
   497  07A3  3010               	movlw	16
   498  07A4  1683               	bsf	3,5	;RP0=1, select bank1
   499  07A5  1303               	bcf	3,6	;RP1=0, select bank1
   500  07A6  0087               	movwf	7	;volatile
   501  07A7                     l43:	
   502  07A7  0008               	return
   503  07A8                     __end_of_spi_master_init:	
   504                           
   505                           	psect	text4
   506  07B5                     __ptext4:	
   507 ;; *************** function _send_to_spi *****************
   508 ;; Defined at:
   509 ;;		line 50 in file "spi.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;  ch              1    wreg     unsigned char 
   512 ;; Auto vars:     Size  Location     Type
   513 ;;  ch              1    2[COMMON] unsigned char 
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   523 ;;      Params:         0       0       0       0       0
   524 ;;      Locals:         1       0       0       0       0
   525 ;;      Temps:          2       0       0       0       0
   526 ;;      Totals:         3       0       0       0       0
   527 ;;Total ram usage:        3 bytes
   528 ;; Hardware stack levels used:    1
   529 ;; This function calls:
   530 ;;		Nothing
   531 ;; This function is called by:
   532 ;;		_main
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           
   537                           ;psect for function _send_to_spi
   538  07B5                     _send_to_spi:	
   539                           
   540                           ;incstack = 0
   541                           ; Regs used in _send_to_spi: [wreg]
   542                           ;send_to_spi@ch stored from wreg
   543  07B5  00F2               	movwf	send_to_spi@ch
   544  07B6                     l665:	
   545                           
   546                           ;spi.c: 51:     SSPBUF=ch;
   547  07B6  0872               	movf	send_to_spi@ch,w
   548  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   549  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   550  07B9  0093               	movwf	19	;volatile
   551  07BA                     l46:	
   552                           ;spi.c: 52:     while(SSPIF == 0);
   553                           
   554  07BA  1D8C               	btfss	12,3	;volatile
   555  07BB  2FBD               	goto	u31
   556  07BC  2FBE               	goto	u30
   557  07BD                     u31:	
   558  07BD  2FBA               	goto	l46
   559  07BE                     u30:	
   560  07BE                     l48:	
   561                           
   562                           ;spi.c: 53:     SSPIF=0;
   563  07BE  118C               	bcf	12,3	;volatile
   564  07BF                     l667:	
   565                           
   566                           ;spi.c: 54:    _delay((unsigned long)((45)*(4000000/4000.0)));
   567  07BF  303B               	movlw	59
   568  07C0  00F1               	movwf	??_send_to_spi+1
   569  07C1  306F               	movlw	111
   570  07C2  00F0               	movwf	??_send_to_spi
   571  07C3                     u47:	
   572  07C3  0BF0               	decfsz	??_send_to_spi,f
   573  07C4  2FC3               	goto	u47
   574  07C5  0BF1               	decfsz	??_send_to_spi+1,f
   575  07C6  2FC3               	goto	u47
   576  07C7  2FC8               	nop2
   577  07C8                     l49:	
   578  07C8  0008               	return
   579  07C9                     __end_of_send_to_spi:	
   580  007E                     btemp	set	126	;btemp
   581  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_send_to_spi

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      60
                                              3 COMMON     2     2      0
                        _send_to_spi
                    _spi_master_init
                          _uart_init
                       _uart_receive
 ---------------------------------------------------------------------------------
 (1) _uart_receive                                         2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_to_spi                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _send_to_spi
   _spi_master_init
   _uart_init
   _uart_receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jun 12 20:01:01 2025

             __CFG_CP$OFF 0000                        l31 07B4                        l40 07DC  
                      l34 07C9                        l43 07A7                        l37 07D5  
                      l46 07BA                        l48 07BE                        l49 07C8  
                      u10 07CF                        u11 07CE                        u20 07DB  
                      u21 07DA                        u30 07BE                        u31 07BD  
                      u47 07C3                       l651 07C9                       l661 079F  
                     l653 07CF                       l663 07A3                       l655 07DB  
                     l671 07E0                       l665 07B6                       l649 07A8  
                     l673 07E5                       l667 07BF                       l659 079C  
                     l675 07EA                       l677 07F2                       l669 07DD  
            __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000                      _RCIF 0065  
                    _TRMT 04C1              __CFG_WRT$OFF 0000                      _main 07DD  
                    btemp 007E                      start 0000                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _RCREG 001A                     _RCSTA 0018  
                   _SPBRG 0099                     _PORTC 0007                     _TRISC 0087  
                   _SSPIF 0063                     _TXREG 0019                     _TXSTA 0098  
          __CFG_BOREN$OFF 0000                     status 0003                     wtemp0 007E  
         __initialization 07FC              __end_of_main 07FC                    ??_main 0073  
            ?_send_to_spi 0070                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000           __CFG_FOSC$EXTRC 0000   __end_of__initialization 07FC  
          __pcstackCOMMON 0070  __size_of_spi_master_init 000C                __pmaintext 07DD  
      __size_of_uart_init 000D                   _SSPSTAT 0094      __size_of_send_to_spi 0014  
                 __ptext1 07C9                   __ptext2 07A8                   __ptext3 079C  
                 __ptext4 07B5            main@uartBuffer 0074      end_of_initialization 07FC  
           ?_uart_receive 0070         __end_of_uart_init 07B5         ??_spi_master_init 0070  
          ??_uart_receive 0070       start_initialization 07FC             send_to_spi@ch 0072  
               ___latbits 0002      __end_of_uart_receive 07DD             ??_send_to_spi 0070  
         _spi_master_init 079C                 _uart_init 07A8       __end_of_send_to_spi 07C9  
              ?_uart_init 0070   __end_of_spi_master_init 07A8             __size_of_main 001F  
   __size_of_uart_receive 0014            uart_receive@ch 0071               _send_to_spi 07B5  
            _uart_receive 07C9               ??_uart_init 0070          ?_spi_master_init 0070  
