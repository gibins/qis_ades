

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jun 12 19:54:43 2025

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F876A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0094                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  018C                     	;# 
   103  018D                     	;# 
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  000E                     	;# 
   118  000F                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0014                     	;# 
   124  0015                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  0018                     	;# 
   129  0019                     	;# 
   130  001A                     	;# 
   131  001B                     	;# 
   132  001B                     	;# 
   133  001C                     	;# 
   134  001D                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  0081                     	;# 
   138  0085                     	;# 
   139  0086                     	;# 
   140  0087                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  008E                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  0013                     _SSPBUF	set	19
   161  0014                     _SSPCON	set	20
   162  0019                     _TXREG	set	25
   163  0018                     _RCSTA	set	24
   164  0063                     _SSPIF	set	99
   165  0087                     _TRISC	set	135
   166  0094                     _SSPSTAT	set	148
   167  0099                     _SPBRG	set	153
   168  0098                     _TXSTA	set	152
   169  04C1                     _TRMT	set	1217
   170                           
   171                           	psect	strings
   172  0003                     __pstrings:	
   173  0003                     stringtab:	
   174  0003                     __stringtab:	
   175  0003                     stringcode:	
   176                           ;	String table - string pointers are 1 byte each
   177                           
   178  0003                     stringdir:	
   179  0003  3000               	movlw	high stringdir
   180  0004  008A               	movwf	10
   181  0005  0804               	movf	4,w
   182  0006  0A84               	incf	4,f
   183  0007  0782               	addwf	2,f
   184  0008                     __stringbase:	
   185  0008  3400               	retlw	0
   186  0009                     __end_of__stringtab:	
   187  0009                     STR_1:	
   188  0009  3452               	retlw	82	;'R'
   189  000A  340D               	retlw	13
   190  000B  3400               	retlw	0
   191                           
   192                           ; #config settings
   193  0000                     
   194                           	psect	cinit
   195  07FC                     start_initialization:	
   196  07FC                     __initialization:	
   197  07FC                     end_of_initialization:	
   198                           ;End of C runtime variable initialization code
   199                           
   200  07FC                     __end_of__initialization:	
   201  07FC  0183               	clrf	3
   202  07FD  120A  118A  2FD1   	ljmp	_main	;jump to C main() function
   203                           
   204                           	psect	cstackCOMMON
   205  0070                     __pcstackCOMMON:	
   206  0070                     ?_uart_init:	
   207  0070                     ??_uart_init:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ?_print_to_serial:	
   211                           ; 1 bytes @ 0x0
   212                           
   213  0070                     ??_print_to_serial:	
   214                           ; 1 bytes @ 0x0
   215                           
   216  0070                     ?_spi_slave_init:	
   217                           ; 1 bytes @ 0x0
   218                           
   219  0070                     ??_spi_slave_init:	
   220                           ; 1 bytes @ 0x0
   221                           
   222  0070                     ?_spi_receive_char:	
   223                           ; 1 bytes @ 0x0
   224                           
   225  0070                     ??_spi_receive_char:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ?_main:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     print_to_serial@message:	
   232                           ; 1 bytes @ 0x0
   233                           
   234                           
   235                           ; 1 bytes @ 0x0
   236  0070                     	ds	1
   237  0071                     spi_receive_char@receivedChar:	
   238                           
   239                           ; 1 bytes @ 0x1
   240  0071                     	ds	1
   241  0072                     ??_main:	
   242                           
   243                           ; 1 bytes @ 0x2
   244  0072                     	ds	2
   245  0074                     main@receivedChar:	
   246                           
   247                           ; 1 bytes @ 0x4
   248  0074                     	ds	1
   249                           
   250                           	psect	maintext
   251  07D1                     __pmaintext:	
   252 ;;
   253 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   254 ;;
   255 ;; *************** function _main *****************
   256 ;; Defined at:
   257 ;;		line 54 in file "spi_slave.c"
   258 ;; Parameters:    Size  Location     Type
   259 ;;		None
   260 ;; Auto vars:     Size  Location     Type
   261 ;;  receivedChar    1    4[COMMON] unsigned char 
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		wreg, status,2, status,0, pclath, cstack
   266 ;; Tracked objects:
   267 ;;		On entry : B00/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   271 ;;      Params:         0       0       0       0       0
   272 ;;      Locals:         1       0       0       0       0
   273 ;;      Temps:          2       0       0       0       0
   274 ;;      Totals:         3       0       0       0       0
   275 ;;Total ram usage:        3 bytes
   276 ;; Hardware stack levels required when called:    1
   277 ;; This function calls:
   278 ;;		_print_to_serial
   279 ;;		_spi_receive_char
   280 ;;		_spi_slave_init
   281 ;;		_uart_init
   282 ;; This function is called by:
   283 ;;		Startup code after reset
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           
   288                           ;psect for function _main
   289  07D1                     _main:	
   290  07D1                     l658:	
   291                           ;incstack = 0
   292                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   293                           
   294                           
   295                           ;spi_slave.c: 56:     spi_slave_init();
   296  07D1  120A  118A  27AB  120A  118A  	fcall	_spi_slave_init
   297                           
   298                           ;spi_slave.c: 57:     uart_init();
   299  07D6  120A  118A  27C4  120A  118A  	fcall	_uart_init
   300                           
   301                           ;spi_slave.c: 59:      print_to_serial("R\r");
   302  07DB  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   303  07DC  120A  118A  279F  120A  118A  	fcall	_print_to_serial
   304  07E1                     l660:	
   305                           
   306                           ;spi_slave.c: 62:        char receivedChar = spi_receive_char();
   307  07E1  120A  118A  27B7  120A  118A  	fcall	_spi_receive_char
   308  07E6  00F2               	movwf	??_main
   309  07E7  0872               	movf	??_main,w
   310  07E8  00F4               	movwf	main@receivedChar
   311  07E9                     l662:	
   312                           
   313                           ;spi_slave.c: 63:        print_to_serial(receivedChar);
   314  07E9  0874               	movf	main@receivedChar,w
   315  07EA  120A  118A  279F  120A  118A  	fcall	_print_to_serial
   316  07EF                     l664:	
   317                           
   318                           ;spi_slave.c: 64:        _delay((unsigned long)((45)*(4000000/4000.0)));
   319  07EF  303B               	movlw	59
   320  07F0  00F3               	movwf	??_main+1
   321  07F1  306F               	movlw	111
   322  07F2  00F2               	movwf	??_main
   323  07F3                     u37:	
   324  07F3  0BF2               	decfsz	??_main,f
   325  07F4  2FF3               	goto	u37
   326  07F5  0BF3               	decfsz	??_main+1,f
   327  07F6  2FF3               	goto	u37
   328  07F7  2FF8               	nop2
   329  07F8  2FE1               	goto	l660
   330  07F9  120A  118A  2800   	ljmp	start
   331  07FC                     __end_of_main:	
   332                           
   333                           	psect	text1
   334  07C4                     __ptext1:	
   335 ;; *************** function _uart_init *****************
   336 ;; Defined at:
   337 ;;		line 23 in file "spi_slave.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;		None
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   351 ;;      Params:         0       0       0       0       0
   352 ;;      Locals:         0       0       0       0       0
   353 ;;      Temps:          0       0       0       0       0
   354 ;;      Totals:         0       0       0       0       0
   355 ;;Total ram usage:        0 bytes
   356 ;; Hardware stack levels used:    1
   357 ;; This function calls:
   358 ;;		Nothing
   359 ;; This function is called by:
   360 ;;		_main
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           
   365                           ;psect for function _uart_init
   366  07C4                     _uart_init:	
   367  07C4                     l640:	
   368                           ;incstack = 0
   369                           ; Regs used in _uart_init: [wreg]
   370                           
   371                           
   372                           ;spi_slave.c: 24:     TXSTA = 0x24;
   373  07C4  3024               	movlw	36
   374  07C5  1683               	bsf	3,5	;RP0=1, select bank1
   375  07C6  1303               	bcf	3,6	;RP1=0, select bank1
   376  07C7  0098               	movwf	24	;volatile
   377                           
   378                           ;spi_slave.c: 25:     RCSTA = 0x90;
   379  07C8  3090               	movlw	144
   380  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   381  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   382  07CB  0098               	movwf	24	;volatile
   383                           
   384                           ;spi_slave.c: 26:     SPBRG = 25;
   385  07CC  3019               	movlw	25
   386  07CD  1683               	bsf	3,5	;RP0=1, select bank1
   387  07CE  1303               	bcf	3,6	;RP1=0, select bank1
   388  07CF  0099               	movwf	25	;volatile
   389  07D0                     l25:	
   390  07D0  0008               	return
   391  07D1                     __end_of_uart_init:	
   392                           
   393                           	psect	text2
   394  07AB                     __ptext2:	
   395 ;; *************** function _spi_slave_init *****************
   396 ;; Defined at:
   397 ;;		line 38 in file "spi_slave.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;		None
   400 ;; Auto vars:     Size  Location     Type
   401 ;;		None
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, status,2
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   411 ;;      Params:         0       0       0       0       0
   412 ;;      Locals:         0       0       0       0       0
   413 ;;      Temps:          0       0       0       0       0
   414 ;;      Totals:         0       0       0       0       0
   415 ;;Total ram usage:        0 bytes
   416 ;; Hardware stack levels used:    1
   417 ;; This function calls:
   418 ;;		Nothing
   419 ;; This function is called by:
   420 ;;		_main
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           
   425                           ;psect for function _spi_slave_init
   426  07AB                     _spi_slave_init:	
   427  07AB                     l644:	
   428                           ;incstack = 0
   429                           ; Regs used in _spi_slave_init: [wreg+status,2]
   430                           
   431                           
   432                           ;spi_slave.c: 39:     SSPSTAT = 0x00;
   433  07AB  1683               	bsf	3,5	;RP0=1, select bank1
   434  07AC  1303               	bcf	3,6	;RP1=0, select bank1
   435  07AD  0194               	clrf	20	;volatile
   436  07AE                     l646:	
   437                           
   438                           ;spi_slave.c: 40:     SSPCON = 0x25;
   439  07AE  3025               	movlw	37
   440  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   441  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   442  07B1  0094               	movwf	20	;volatile
   443  07B2                     l648:	
   444                           
   445                           ;spi_slave.c: 42:     TRISC = (1<<3)|(1<<4);
   446  07B2  3018               	movlw	24
   447  07B3  1683               	bsf	3,5	;RP0=1, select bank1
   448  07B4  1303               	bcf	3,6	;RP1=0, select bank1
   449  07B5  0087               	movwf	7	;volatile
   450  07B6                     l34:	
   451  07B6  0008               	return
   452  07B7                     __end_of_spi_slave_init:	
   453                           
   454                           	psect	text3
   455  07B7                     __ptext3:	
   456 ;; *************** function _spi_receive_char *****************
   457 ;; Defined at:
   458 ;;		line 45 in file "spi_slave.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;  receivedChar    1    1[COMMON] unsigned char 
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      unsigned char 
   465 ;; Registers used:
   466 ;;		wreg
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   472 ;;      Params:         0       0       0       0       0
   473 ;;      Locals:         1       0       0       0       0
   474 ;;      Temps:          1       0       0       0       0
   475 ;;      Totals:         2       0       0       0       0
   476 ;;Total ram usage:        2 bytes
   477 ;; Hardware stack levels used:    1
   478 ;; This function calls:
   479 ;;		Nothing
   480 ;; This function is called by:
   481 ;;		_main
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485                           
   486                           ;psect for function _spi_receive_char
   487  07B7                     _spi_receive_char:	
   488  07B7                     l650:	
   489                           ;incstack = 0
   490                           ; Regs used in _spi_receive_char: [wreg]
   491                           
   492  07B7                     l37:	
   493                           ;spi_slave.c: 47:     char receivedChar;;spi_slave.c: 48:     while(SSPIF == 0);
   494                           
   495  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   496  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   497  07B9  1D8C               	btfss	12,3	;volatile
   498  07BA  2FBC               	goto	u21
   499  07BB  2FBD               	goto	u20
   500  07BC                     u21:	
   501  07BC  2FB7               	goto	l37
   502  07BD                     u20:	
   503  07BD                     l652:	
   504                           
   505                           ;spi_slave.c: 49:     receivedChar = SSPBUF;
   506  07BD  0813               	movf	19,w	;volatile
   507  07BE  00F0               	movwf	??_spi_receive_char
   508  07BF  0870               	movf	??_spi_receive_char,w
   509  07C0  00F1               	movwf	spi_receive_char@receivedChar
   510  07C1                     l654:	
   511                           
   512                           ;spi_slave.c: 50:     SSPIF=0;
   513  07C1  118C               	bcf	12,3	;volatile
   514                           
   515                           ;spi_slave.c: 51:     return receivedChar;
   516  07C2  0871               	movf	spi_receive_char@receivedChar,w
   517  07C3                     l40:	
   518  07C3  0008               	return
   519  07C4                     __end_of_spi_receive_char:	
   520                           
   521                           	psect	text4
   522  079F                     __ptext4:	
   523 ;; *************** function _print_to_serial *****************
   524 ;; Defined at:
   525 ;;		line 29 in file "spi_slave.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;  message         1    wreg     unsigned char 
   528 ;; Auto vars:     Size  Location     Type
   529 ;;  message         1    0[COMMON] unsigned char 
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         0       0       0       0       0
   540 ;;      Locals:         1       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0
   542 ;;      Totals:         1       0       0       0       0
   543 ;;Total ram usage:        1 bytes
   544 ;; Hardware stack levels used:    1
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           
   553                           ;psect for function _print_to_serial
   554  079F                     _print_to_serial:	
   555                           
   556                           ;incstack = 0
   557                           ; Regs used in _print_to_serial: [wreg]
   558                           ;print_to_serial@message stored from wreg
   559  079F  00F0               	movwf	print_to_serial@message
   560  07A0                     l642:	
   561                           
   562                           ;spi_slave.c: 32:         TXREG = message;
   563  07A0  0870               	movf	print_to_serial@message,w
   564  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   565  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   566  07A3  0099               	movwf	25	;volatile
   567  07A4                     l28:	
   568                           ;spi_slave.c: 33:         while (TRMT == 0);
   569                           
   570  07A4  1683               	bsf	3,5	;RP0=1, select bank1
   571  07A5  1303               	bcf	3,6	;RP1=0, select bank1
   572  07A6  1C98               	btfss	24,1	;volatile
   573  07A7  2FA9               	goto	u11
   574  07A8  2FAA               	goto	u10
   575  07A9                     u11:	
   576  07A9  2FA4               	goto	l28
   577  07AA                     u10:	
   578  07AA                     l31:	
   579  07AA  0008               	return
   580  07AB                     __end_of_print_to_serial:	
   581  007E                     btemp	set	126	;btemp
   582  007E                     wtemp0	set	126


Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spi_receive_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      45
                                              2 COMMON     3     3      0
                    _print_to_serial
                   _spi_receive_char
                     _spi_slave_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_slave_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_receive_char                                     2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _print_to_serial                                      1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _print_to_serial
   _spi_receive_char
   _spi_slave_init
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jun 12 19:54:43 2025

                           pc 0002                   __CFG_CP$OFF 0000                            l31 07AA  
                          l40 07C3                            l25 07D0                            l34 07B6  
                          l28 07A4                            l37 07B7                            u10 07AA  
                          u11 07A9                            u20 07BD                            u21 07BC  
                          u37 07F3                            fsr 0004                           l640 07C4  
                         l642 07A0                           l650 07B7                           l652 07BD  
                         l644 07AB                           l660 07E1                           l654 07C1  
                         l646 07AE                           l662 07E9                           l648 07B2  
                         l664 07EF                           l658 07D1                  __CFG_CPD$OFF 0000  
            ?_print_to_serial 0070                  __CFG_LVP$OFF 0000               ?_spi_slave_init 0070  
                        STR_1 0009                          _TRMT 04C1                  __CFG_WRT$OFF 0000  
                        _main 07D1                          btemp 007E                          start 0000  
                       ?_main 0070                 __CFG_WDTE$OFF 0000                         _RCSTA 0018  
                       _SPBRG 0099                         _TRISC 0087                         _SSPIF 0063  
                       _TXREG 0019                         _TXSTA 0098                __CFG_BOREN$OFF 0000  
                       pclath 000A                         status 0003                         wtemp0 007E  
             __initialization 07FC                  __end_of_main 07FC                        ??_main 0072  
                      _SSPCON 0014                        _SSPBUF 0013                __CFG_PWRTE$OFF 0000  
             __CFG_FOSC$EXTRC 0000       __end_of__initialization 07FC                __pcstackCOMMON 0070  
   __size_of_spi_receive_char 000D              ??_spi_slave_init 0070                    __pmaintext 07D1  
          __size_of_uart_init 000D                       _SSPSTAT 0094                    __stringtab 0003  
    __size_of_print_to_serial 000C                       __ptext1 07C4                       __ptext2 07AB  
                     __ptext3 07B7                       __ptext4 079F          end_of_initialization 07FC  
           __end_of_uart_init 07D1              _spi_receive_char 07B7             ??_print_to_serial 0070  
         start_initialization 07FC              main@receivedChar 0074                     ___latbits 0002  
spi_receive_char@receivedChar 0071                     __pstrings 0003       __size_of_spi_slave_init 000C  
    __end_of_spi_receive_char 07C4                     _uart_init 07C4                   __stringbase 0008  
             _print_to_serial 079F                    ?_uart_init 0070            __end_of__stringtab 0009  
      print_to_serial@message 0070                 __size_of_main 002B       __end_of_print_to_serial 07AB  
              _spi_slave_init 07AB                     stringcode 0003                   ??_uart_init 0070  
                    stringdir 0003                      stringtab 0003        __end_of_spi_slave_init 07B7  
           ?_spi_receive_char 0070            ??_spi_receive_char 0070  
