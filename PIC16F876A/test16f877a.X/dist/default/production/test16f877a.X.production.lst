

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jun 17 09:47:32 2025

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0006                     _PORTB	set	6
   169  0007                     _PORTC	set	7
   170  0031                     _RB1	set	49
   171  0030                     _RB0	set	48
   172  0032                     _RB2	set	50
   173  0087                     _TRISC	set	135
   174  0086                     _TRISB	set	134
   175                           
   176                           	psect	strings
   177  0003                     __pstrings:	
   178  0003                     stringtab:	
   179  0003                     __stringtab:	
   180                           
   181                           ;	String table - string pointers are 1 byte each
   182  0003  1BFF               	btfsc	btemp+1,7
   183  0004  280D               	ljmp	stringcode
   184  0005  1383               	bcf	3,7
   185  0006  187F               	btfsc	btemp+1,0
   186  0007  1783               	bsf	3,7
   187  0008  0800               	movf	0,w
   188  0009  0A84               	incf	4,f
   189  000A  1903               	skipnz
   190  000B  0AFF               	incf	btemp+1,f
   191  000C  0008               	return
   192  000D                     stringcode:	
   193  000D                     stringdir:	
   194  000D  3000               	movlw	high stringdir
   195  000E  008A               	movwf	10
   196  000F  0804               	movf	4,w
   197  0010  0A84               	incf	4,f
   198  0011  0782               	addwf	2,f
   199  0012                     __stringbase:	
   200  0012  3400               	retlw	0
   201  0013                     __end_of__stringtab:	
   202  0013                     STR_1:	
   203  0013  3448               	retlw	72	;'H'
   204  0014  3465               	retlw	101	;'e'
   205  0015  346C               	retlw	108	;'l'
   206  0016  346C               	retlw	108	;'l'
   207  0017  346F               	retlw	111	;'o'
   208  0018  3420               	retlw	32	;' '
   209  0019  3477               	retlw	119	;'w'
   210  001A  346F               	retlw	111	;'o'
   211  001B  3472               	retlw	114	;'r'
   212  001C  346C               	retlw	108	;'l'
   213  001D  3464               	retlw	100	;'d'
   214  001E  3420               	retlw	32	;' '
   215  001F  340D               	retlw	13
   216  0020  3400               	retlw	0
   217                           
   218                           ; #config settings
   219  0000                     
   220                           	psect	cinit
   221  07FC                     start_initialization:	
   222  07FC                     __initialization:	
   223  07FC                     end_of_initialization:	
   224                           ;End of C runtime variable initialization code
   225                           
   226  07FC                     __end_of__initialization:	
   227  07FC  0183               	clrf	3
   228  07FD  120A  118A  2FC8   	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	cstackCOMMON
   231  0070                     __pcstackCOMMON:	
   232  0070                     ?_lcd_enable:	
   233  0070                     ??_lcd_enable:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ?_lcd_cmd:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ?_lcd_init:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0070                     ?_main:	
   243                           ; 1 bytes @ 0x0
   244                           
   245                           
   246                           ; 1 bytes @ 0x0
   247  0070                     	ds	2
   248  0072                     ??_lcd_cmd:	
   249  0072                     ?_print:	
   250                           ; 1 bytes @ 0x2
   251                           
   252  0072                     lcd_cmd@cmd:	
   253                           ; 1 bytes @ 0x2
   254                           
   255  0072                     print@data:	
   256                           ; 1 bytes @ 0x2
   257                           
   258                           
   259                           ; 2 bytes @ 0x2
   260  0072                     	ds	1
   261  0073                     ??_lcd_init:	
   262                           
   263                           ; 1 bytes @ 0x3
   264  0073                     	ds	1
   265  0074                     ??_print:	
   266  0074                     print@i:	
   267                           ; 1 bytes @ 0x4
   268                           
   269                           
   270                           ; 2 bytes @ 0x4
   271  0074                     	ds	2
   272  0076                     ??_main:	
   273                           
   274                           ; 1 bytes @ 0x6
   275  0076                     	ds	2
   276  0078                     main@count:	
   277                           
   278                           ; 2 bytes @ 0x8
   279  0078                     	ds	2
   280                           
   281                           	psect	maintext
   282  07C8                     __pmaintext:	
   283 ;;
   284 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   285 ;;
   286 ;; *************** function _main *****************
   287 ;; Defined at:
   288 ;;		line 64 in file "testlcd.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;  count           2    8[COMMON] int 
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   297 ;; Tracked objects:
   298 ;;		On entry : B00/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   302 ;;      Params:         0       0       0       0       0
   303 ;;      Locals:         2       0       0       0       0
   304 ;;      Temps:          2       0       0       0       0
   305 ;;      Totals:         4       0       0       0       0
   306 ;;Total ram usage:        4 bytes
   307 ;; Hardware stack levels required when called:    3
   308 ;; This function calls:
   309 ;;		_lcd_init
   310 ;;		_print
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           
   317                           ;psect for function _main
   318  07C8                     _main:	
   319  07C8                     l689:	
   320                           ;incstack = 0
   321                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   322                           
   323  07C8  1683               	bsf	3,5	;RP0=1, select bank1
   324  07C9  1303               	bcf	3,6	;RP1=0, select bank1
   325  07CA  0186               	clrf	6	;volatile
   326  07CB  0187               	clrf	7	;volatile
   327  07CC  1283               	bcf	3,5	;RP0=0, select bank0
   328  07CD  1303               	bcf	3,6	;RP1=0, select bank0
   329  07CE  0186               	clrf	6	;volatile
   330  07CF  0187               	clrf	7	;volatile
   331  07D0                     l691:	
   332  07D0  120A  118A  277C  120A  118A  	fcall	_lcd_init
   333  07D5                     l693:	
   334  07D5  01F8               	clrf	main@count
   335  07D6  01F9               	clrf	main@count+1
   336  07D7                     l695:	
   337  07D7  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   338  07D8  00F2               	movwf	print@data
   339  07D9  3080               	movlw	128
   340  07DA  00F3               	movwf	print@data+1
   341  07DB  120A  118A  2795  120A  118A  	fcall	_print
   342  07E0                     l697:	
   343  07E0  0878               	movf	main@count,w
   344  07E1  00F2               	movwf	print@data
   345  07E2  0879               	movf	main@count+1,w
   346  07E3  00F3               	movwf	print@data+1
   347  07E4  120A  118A  2795  120A  118A  	fcall	_print
   348  07E9                     l699:	
   349  07E9  3001               	movlw	1
   350  07EA  07F8               	addwf	main@count,f
   351  07EB  1803               	skipnc
   352  07EC  0AF9               	incf	main@count+1,f
   353  07ED  3000               	movlw	0
   354  07EE  07F9               	addwf	main@count+1,f
   355  07EF                     l701:	
   356  07EF  300D               	movlw	13
   357  07F0  00F7               	movwf	??_main+1
   358  07F1  30FB               	movlw	251
   359  07F2  00F6               	movwf	??_main
   360  07F3                     u37:	
   361  07F3  0BF6               	decfsz	??_main,f
   362  07F4  2FF3               	goto	u37
   363  07F5  0BF7               	decfsz	??_main+1,f
   364  07F6  2FF3               	goto	u37
   365  07F7  2FF8               	nop2
   366  07F8  2FD7               	goto	l695
   367  07F9  120A  118A  2800   	ljmp	start
   368  07FC                     __end_of_main:	
   369                           
   370                           	psect	text1
   371  0795                     __ptext1:	
   372 ;; *************** function _print *****************
   373 ;; Defined at:
   374 ;;		line 53 in file "testlcd.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;  data            2    2[COMMON] PTR unsigned char 
   377 ;;		 -> RAM(512), STR_1(14), 
   378 ;; Auto vars:     Size  Location     Type
   379 ;;  i               2    4[COMMON] int 
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   389 ;;      Params:         2       0       0       0       0
   390 ;;      Locals:         2       0       0       0       0
   391 ;;      Temps:          0       0       0       0       0
   392 ;;      Totals:         4       0       0       0       0
   393 ;;Total ram usage:        4 bytes
   394 ;; Hardware stack levels used:    1
   395 ;; Hardware stack levels required when called:    1
   396 ;; This function calls:
   397 ;;		_lcd_enable
   398 ;; This function is called by:
   399 ;;		_main
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           
   404                           ;psect for function _print
   405  0795                     _print:	
   406  0795                     l675:	
   407                           ;incstack = 0
   408                           ; Regs used in _print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   409                           
   410                           
   411                           ;testlcd.c: 55:         print(count);
   412  0795  01F4               	clrf	print@i
   413  0796  01F5               	clrf	print@i+1
   414  0797  2FB3               	goto	l687
   415  0798                     l677:	
   416                           
   417                           ;testlcd.c: 56:         count++;
   418  0798  0874               	movf	print@i,w
   419  0799  0772               	addwf	print@data,w
   420  079A  0084               	movwf	4
   421  079B  0875               	movf	print@i+1,w
   422  079C  1803               	skipnc
   423  079D  0A75               	incf	print@i+1,w
   424  079E  0773               	addwf	print@data+1,w
   425  079F  00FF               	movwf	btemp+1
   426  07A0  120A  118A  2003  120A  118A  	fcall	stringtab
   427  07A5  0087               	movwf	7	;volatile
   428  07A6                     l679:	
   429                           
   430                           ;testlcd.c: 57:         _delay((unsigned long)((10)*(4000000/4000.0)));
   431  07A6  1406               	bsf	6,0	;volatile
   432  07A7                     l681:	
   433                           
   434                           ;testlcd.c: 58:     }
   435  07A7  1086               	bcf	6,1	;volatile
   436  07A8                     l683:	
   437                           
   438                           ;testlcd.c: 59:     return;
   439  07A8  120A  118A  276D  120A  118A  	fcall	_lcd_enable
   440  07AD                     l685:	
   441  07AD  3001               	movlw	1
   442  07AE  07F4               	addwf	print@i,f
   443  07AF  1803               	skipnc
   444  07B0  0AF5               	incf	print@i+1,f
   445  07B1  3000               	movlw	0
   446  07B2  07F5               	addwf	print@i+1,f
   447  07B3                     l687:	
   448  07B3  0874               	movf	print@i,w
   449  07B4  0772               	addwf	print@data,w
   450  07B5  0084               	movwf	4
   451  07B6  0875               	movf	print@i+1,w
   452  07B7  1803               	skipnc
   453  07B8  0A75               	incf	print@i+1,w
   454  07B9  0773               	addwf	print@data+1,w
   455  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   456  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   457  07BC  00FF               	movwf	btemp+1
   458  07BD  120A  118A  2003  120A  118A  	fcall	stringtab
   459  07C2  3A00               	xorlw	0
   460  07C3  1D03               	skipz
   461  07C4  2FC6               	goto	u21
   462  07C5  2FC7               	goto	u20
   463  07C6                     u21:	
   464  07C6  2F98               	goto	l677
   465  07C7                     u20:	
   466  07C7                     l31:	
   467  07C7  0008               	return
   468  07C8                     __end_of_print:	
   469                           
   470                           	psect	text2
   471  077C                     __ptext2:	
   472 ;; *************** function _lcd_init *****************
   473 ;; Defined at:
   474 ;;		line 41 in file "testlcd.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0, pclath, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   488 ;;      Params:         0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0
   491 ;;      Totals:         0       0       0       0       0
   492 ;;Total ram usage:        0 bytes
   493 ;; Hardware stack levels used:    1
   494 ;; Hardware stack levels required when called:    2
   495 ;; This function calls:
   496 ;;		_lcd_cmd
   497 ;; This function is called by:
   498 ;;		_main
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           
   503                           ;psect for function _lcd_init
   504  077C                     _lcd_init:	
   505  077C                     l645:	
   506                           ;incstack = 0
   507                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   508                           
   509                           
   510                           ;testlcd.c: 43: void main(void) {
   511  077C  3038               	movlw	56
   512  077D  120A  118A  2760  120A  118A  	fcall	_lcd_cmd
   513                           
   514                           ;testlcd.c: 44: 
   515  0782  3006               	movlw	6
   516  0783  120A  118A  2760  120A  118A  	fcall	_lcd_cmd
   517                           
   518                           ;testlcd.c: 45:     TRISB = 0x00;
   519  0788  300C               	movlw	12
   520  0789  120A  118A  2760  120A  118A  	fcall	_lcd_cmd
   521                           
   522                           ;testlcd.c: 46:     TRISC = 0x00;
   523  078E  3080               	movlw	128
   524  078F  120A  118A  2760  120A  118A  	fcall	_lcd_cmd
   525  0794                     l25:	
   526  0794  0008               	return
   527  0795                     __end_of_lcd_init:	
   528                           
   529                           	psect	text3
   530  0760                     __ptext3:	
   531 ;; *************** function _lcd_cmd *****************
   532 ;; Defined at:
   533 ;;		line 33 in file "testlcd.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;  cmd             1    wreg     unsigned char 
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  cmd             1    2[COMMON] unsigned char 
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0, pclath, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   547 ;;      Params:         0       0       0       0       0
   548 ;;      Locals:         1       0       0       0       0
   549 ;;      Temps:          0       0       0       0       0
   550 ;;      Totals:         1       0       0       0       0
   551 ;;Total ram usage:        1 bytes
   552 ;; Hardware stack levels used:    1
   553 ;; Hardware stack levels required when called:    1
   554 ;; This function calls:
   555 ;;		_lcd_enable
   556 ;; This function is called by:
   557 ;;		_lcd_init
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           
   562                           ;psect for function _lcd_cmd
   563  0760                     _lcd_cmd:	
   564                           
   565                           ;incstack = 0
   566                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
   567                           ;lcd_cmd@cmd stored from wreg
   568  0760  00F2               	movwf	lcd_cmd@cmd
   569  0761                     l637:	
   570                           
   571                           ;testlcd.c: 35:         PORTC = data[i];
   572  0761  0872               	movf	lcd_cmd@cmd,w
   573  0762  1283               	bcf	3,5	;RP0=0, select bank0
   574  0763  1303               	bcf	3,6	;RP1=0, select bank0
   575  0764  0087               	movwf	7	;volatile
   576  0765                     l639:	
   577                           
   578                           ;testlcd.c: 36:         RB0 = 1;
   579  0765  1006               	bcf	6,0	;volatile
   580  0766                     l641:	
   581                           
   582                           ;testlcd.c: 37:         RB1 = 0;
   583  0766  1086               	bcf	6,1	;volatile
   584  0767                     l643:	
   585                           
   586                           ;testlcd.c: 38:         lcd_enable();
   587  0767  120A  118A  276D  120A  118A  	fcall	_lcd_enable
   588  076C                     l22:	
   589  076C  0008               	return
   590  076D                     __end_of_lcd_cmd:	
   591                           
   592                           	psect	text4
   593  076D                     __ptext4:	
   594 ;; *************** function _lcd_enable *****************
   595 ;; Defined at:
   596 ;;		line 27 in file "testlcd.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   610 ;;      Params:         0       0       0       0       0
   611 ;;      Locals:         0       0       0       0       0
   612 ;;      Temps:          2       0       0       0       0
   613 ;;      Totals:         2       0       0       0       0
   614 ;;Total ram usage:        2 bytes
   615 ;; Hardware stack levels used:    1
   616 ;; This function calls:
   617 ;;		Nothing
   618 ;; This function is called by:
   619 ;;		_lcd_cmd
   620 ;;		_print
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           
   625                           ;psect for function _lcd_enable
   626  076D                     _lcd_enable:	
   627  076D                     l631:	
   628                           ;incstack = 0
   629                           ; Regs used in _lcd_enable: [wreg]
   630                           
   631                           
   632                           ;testlcd.c: 28: 
   633  076D  1283               	bcf	3,5	;RP0=0, select bank0
   634  076E  1303               	bcf	3,6	;RP1=0, select bank0
   635  076F  1506               	bsf	6,2	;volatile
   636  0770                     l633:	
   637                           
   638                           ;testlcd.c: 29: 
   639  0770  3027               	movlw	39
   640  0771  00F1               	movwf	??_lcd_enable+1
   641  0772  30F5               	movlw	245
   642  0773  00F0               	movwf	??_lcd_enable
   643  0774                     u47:	
   644  0774  0BF0               	decfsz	??_lcd_enable,f
   645  0775  2F74               	goto	u47
   646  0776  0BF1               	decfsz	??_lcd_enable+1,f
   647  0777  2F74               	goto	u47
   648  0778                     l635:	
   649                           
   650                           ;testlcd.c: 30: }
   651  0778  1283               	bcf	3,5	;RP0=0, select bank0
   652  0779  1303               	bcf	3,6	;RP1=0, select bank0
   653  077A  1106               	bcf	6,2	;volatile
   654  077B                     l19:	
   655  077B  0008               	return
   656  077C                     __end_of_lcd_enable:	
   657  007E                     btemp	set	126	;btemp
   658  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    print@data	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_print
    _print->_lcd_enable
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_enable

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     281
                                              6 COMMON     4     4      0
                           _lcd_init
                              _print
 ---------------------------------------------------------------------------------
 (1) _print                                                4     2      2     242
                                              2 COMMON     4     2      2
                         _lcd_enable
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      15
                                              2 COMMON     1     1      0
                         _lcd_enable
 ---------------------------------------------------------------------------------
 (2) _lcd_enable                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_cmd
       _lcd_enable
   _print
     _lcd_enable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jun 17 09:47:32 2025

                      pc 0002              __CFG_CP$OFF 0000                       l22 076C  
                     l31 07C7                       l25 0794                       l19 077B  
                     u20 07C7                       u21 07C6                       u37 07F3  
                     u47 0774                       fsr 0004                      l701 07EF  
                    l631 076D                      l633 0770                      l641 0766  
                    l635 0778                      l643 0767                      l637 0761  
                    l645 077C                      l639 0765                      l681 07A7  
                    l683 07A8                      l675 0795                      l691 07D0  
                    l685 07AD                      l677 0798                      l693 07D5  
                    l679 07A6                      l687 07B3                      l695 07D7  
                    l697 07E0                      l689 07C8                      l699 07E9  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
           __CFG_CPD$OFF 0000                      fsr0 0004                      indf 0000  
           __CFG_LVP$OFF 0000                     STR_1 0013             __CFG_WRT$OFF 0000  
                   _main 07C8                     btemp 007E                     start 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
        __end_of_lcd_cmd 076D                    _print 0795           __CFG_BOREN$OFF 0000  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0076  
                 ?_print 0072           __CFG_PWRTE$OFF 0000         __end_of_lcd_init 0795  
              ??_lcd_cmd 0072                   print@i 0074          __CFG_FOSC$EXTRC 0000  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_print 07C8  
                ??_print 0074               __pmaintext 07C8               _lcd_enable 076D  
              ?_lcd_init 0070               __stringtab 0003                  __ptext1 0795  
                __ptext2 077C                  __ptext3 0760                  __ptext4 076D  
                _lcd_cmd 0760               ??_lcd_init 0073     end_of_initialization 07FC  
            ?_lcd_enable 0070               lcd_cmd@cmd 0072      start_initialization 07FC  
    __size_of_lcd_enable 000F                ___latbits 0002        __size_of_lcd_init 0019  
              __pstrings 0003                 ?_lcd_cmd 0070           __size_of_print 0033  
            __stringbase 0012             ??_lcd_enable 0070                main@count 0078  
     __end_of_lcd_enable 077C       __end_of__stringtab 0013         __size_of_lcd_cmd 000D  
               _lcd_init 077C            __size_of_main 0034                print@data 0072  
              stringcode 000D                 stringdir 000D                 stringtab 0003  
