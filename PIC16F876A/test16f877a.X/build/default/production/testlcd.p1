Version 4.0 HI-TECH Software Intermediate Code
"2680 D:\pic\include\pic16f877a.h
[; ;D:\pic\include\pic16f877a.h: 2680: extern volatile __bit RB2 __attribute__((address(0x32)));
[v _RB2 `Vb ~T0 @X0 0 e@50 ]
[v F842 `(v ~T0 @X0 1 tf1`ul ]
"92 D:\pic\include\pic.h
[v __delay `JF842 ~T0 @X0 0 e ]
[p i __delay ]
"278 D:\pic\include\pic16f877a.h
[; ;D:\pic\include\pic16f877a.h: 278: extern volatile unsigned char PORTC __attribute__((address(0x007)));
[v _PORTC `Vuc ~T0 @X0 0 e@7 ]
"2674
[; ;D:\pic\include\pic16f877a.h: 2674: extern volatile __bit RB0 __attribute__((address(0x30)));
[v _RB0 `Vb ~T0 @X0 0 e@48 ]
"2677
[; ;D:\pic\include\pic16f877a.h: 2677: extern volatile __bit RB1 __attribute__((address(0x31)));
[v _RB1 `Vb ~T0 @X0 0 e@49 ]
[p mainexit ]
"1375
[; ;D:\pic\include\pic16f877a.h: 1375: extern volatile unsigned char TRISB __attribute__((address(0x086)));
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"1437
[; ;D:\pic\include\pic16f877a.h: 1437: extern volatile unsigned char TRISC __attribute__((address(0x087)));
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"216
[; ;D:\pic\include\pic16f877a.h: 216: extern volatile unsigned char PORTB __attribute__((address(0x006)));
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"54 D:\pic\include\pic16f877a.h
[; ;D:\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;D:\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;D:\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;D:\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;D:\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;D:\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;D:\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;D:\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;D:\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;D:\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;D:\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;D:\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;D:\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;D:\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;D:\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;D:\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;D:\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;D:\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;D:\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;D:\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;D:\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;D:\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;D:\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;D:\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;D:\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;D:\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;D:\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;D:\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;D:\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;D:\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;D:\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;D:\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;D:\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;D:\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;D:\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;D:\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;D:\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;D:\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;D:\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;D:\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;D:\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;D:\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;D:\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;D:\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;D:\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;D:\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;D:\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;D:\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;D:\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;D:\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;D:\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;D:\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;D:\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;D:\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;D:\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;D:\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;D:\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;D:\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;D:\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;D:\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"12 testlcd.c
[; ;testlcd.c: 12: void lcd_cmd(char cmd) {
[p x FOSC = EXTRC ]
"13
[; ;testlcd.c: 13: 
[p x WDTE = OFF ]
"14
[; ;testlcd.c: 14:     PORTC = cmd;
[p x PWRTE = OFF ]
"15
[; ;testlcd.c: 15:     RB0 = 0;
[p x BOREN = OFF ]
"16
[; ;testlcd.c: 16:     RB1 = 0;
[p x LVP = OFF ]
"17
[; ;testlcd.c: 17:     lcd_enable();
[p x CPD = OFF ]
"18
[; ;testlcd.c: 18: }
[p x WRT = OFF ]
"19
[; ;testlcd.c: 19: 
[p x CP = OFF ]
"27
[; ;testlcd.c: 27: 
[v _lcd_enable `(v ~T0 @X0 1 ef ]
{
[e :U _lcd_enable ]
[f ]
"28
[; ;testlcd.c: 28: 
[e = _RB2 -> -> 1 `i `b ]
"29
[; ;testlcd.c: 29: 
[e ( __delay (1 -> * -> -> 30 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"30
[; ;testlcd.c: 30: }
[e = _RB2 -> -> 0 `i `b ]
"31
[; ;testlcd.c: 31: 
[e :UE 95 ]
}
"33
[; ;testlcd.c: 33: 
[v _lcd_cmd `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _lcd_cmd ]
[v _cmd `uc ~T0 @X0 1 r1 ]
[f ]
"35
[; ;testlcd.c: 35:         PORTC = data[i];
[e = _PORTC -> _cmd `uc ]
"36
[; ;testlcd.c: 36:         RB0 = 1;
[e = _RB0 -> -> 0 `i `b ]
"37
[; ;testlcd.c: 37:         RB1 = 0;
[e = _RB1 -> -> 0 `i `b ]
"38
[; ;testlcd.c: 38:         lcd_enable();
[e ( _lcd_enable ..  ]
"39
[; ;testlcd.c: 39: 
[e :UE 96 ]
}
"41
[; ;testlcd.c: 41: }
[v _lcd_init `(v ~T0 @X0 1 ef ]
{
[e :U _lcd_init ]
[f ]
"43
[; ;testlcd.c: 43: void main(void) {
[e ( _lcd_cmd (1 -> -> 56 `i `uc ]
"44
[; ;testlcd.c: 44: 
[e ( _lcd_cmd (1 -> -> 6 `i `uc ]
"45
[; ;testlcd.c: 45:     TRISB = 0x00;
[e ( _lcd_cmd (1 -> -> 12 `i `uc ]
"46
[; ;testlcd.c: 46:     TRISC = 0x00;
[e ( _lcd_cmd (1 -> -> 128 `i `uc ]
"51
[; ;testlcd.c: 51:     lcd_init();
[e :UE 97 ]
}
"53
[; ;testlcd.c: 53:     while (1){
[v _print `(v ~T0 @X0 1 ef1`*uc ]
{
[e :U _print ]
[v _data `*uc ~T0 @X0 1 r1 ]
[f ]
"55
[; ;testlcd.c: 55:         print(count);
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $U 102  ]
[e :U 99 ]
{
"56
[; ;testlcd.c: 56:         count++;
[e = _PORTC -> *U + _data * -> _i `x -> -> # *U _data `i `x `uc ]
"57
[; ;testlcd.c: 57:         _delay((unsigned long)((10)*(4000000/4000.0)));
[e = _RB0 -> -> 1 `i `b ]
"58
[; ;testlcd.c: 58:     }
[e = _RB1 -> -> 0 `i `b ]
"59
[; ;testlcd.c: 59:     return;
[e ( _lcd_enable ..  ]
"61
}
[e ++ _i -> 1 `i ]
[e :U 102 ]
[e $ != -> *U + _data * -> _i `x -> -> # *U _data `i `x `ui -> 0 `ui 99  ]
[e :U 100 ]
}
"62
[e :UE 98 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"64
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"66
[e = _TRISB -> -> 0 `i `uc ]
"67
[e = _TRISC -> -> 0 `i `uc ]
"69
[e = _PORTB -> -> 0 `i `uc ]
"70
[e = _PORTC -> -> 0 `i `uc ]
"72
[e ( _lcd_init ..  ]
"73
[v _count `i ~T0 @X0 1 a ]
[e = _count -> 0 `i ]
"74
[e :U 105 ]
{
"75
[e ( _print (1 :s 1C ]
"76
[e ( _print (1 -> _count `*uc ]
"77
[e ++ _count -> 1 `i ]
"78
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"79
}
[e :U 104 ]
[e $U 105  ]
[e :U 106 ]
"80
[e $UE 103  ]
"81
[e :UE 103 ]
}
[a 1C 72 101 108 108 111 32 119 111 114 108 100 32 13 0 ]
