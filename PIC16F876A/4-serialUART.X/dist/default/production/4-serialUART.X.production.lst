

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon May 26 21:03:14 2025

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 2.10
    12                           ; Generated 31/07/2019 GMT
    13                           ; 
    14                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F876A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000D                     	;# 
    57  000E                     	;# 
    58  000E                     	;# 
    59  000F                     	;# 
    60  0010                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0013                     	;# 
    64  0014                     	;# 
    65  0015                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  001D                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  0086                     	;# 
    81  0087                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  0091                     	;# 
    86  0092                     	;# 
    87  0093                     	;# 
    88  0094                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  010C                     	;# 
    96  010D                     	;# 
    97  010E                     	;# 
    98  010F                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101  0000                     	;# 
   102  0001                     	;# 
   103  0002                     	;# 
   104  0003                     	;# 
   105  0004                     	;# 
   106  0005                     	;# 
   107  0006                     	;# 
   108  0007                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  000D                     	;# 
   113  000E                     	;# 
   114  000E                     	;# 
   115  000F                     	;# 
   116  0010                     	;# 
   117  0011                     	;# 
   118  0012                     	;# 
   119  0013                     	;# 
   120  0014                     	;# 
   121  0015                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  0019                     	;# 
   127  001A                     	;# 
   128  001B                     	;# 
   129  001B                     	;# 
   130  001C                     	;# 
   131  001D                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  0081                     	;# 
   135  0085                     	;# 
   136  0086                     	;# 
   137  0087                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  001A                     _RCREG	set	26
   158  0019                     _TXREG	set	25
   159  0018                     _RCSTA	set	24
   160  0065                     _RCIF	set	101
   161  0099                     _SPBRG	set	153
   162  0098                     _TXSTA	set	152
   163  04C1                     _TRMT	set	1217
   164                           
   165                           	psect	strings
   166  0003                     __pstrings:	
   167  0003                     stringtab:	
   168  0003                     __stringtab:	
   169  0003                     stringcode:	
   170                           ;	String table - string pointers are 1 byte each
   171                           
   172  0003                     stringdir:	
   173  0003  3000               	movlw	high stringdir
   174  0004  008A               	movwf	10
   175  0005  0804               	movf	4,w
   176  0006  0A84               	incf	4,f
   177  0007  0782               	addwf	2,f
   178  0008                     __stringbase:	
   179  0008  3400               	retlw	0
   180  0009                     __end_of__stringtab:	
   181  0009                     STR_1:	
   182  0009  340D               	retlw	13
   183  000A  3420               	retlw	32	;' '
   184  000B  3445               	retlw	69	;'E'
   185  000C  346E               	retlw	110	;'n'
   186  000D  3474               	retlw	116	;'t'
   187  000E  3465               	retlw	101	;'e'
   188  000F  3472               	retlw	114	;'r'
   189  0010  3420               	retlw	32	;' '
   190  0011  3461               	retlw	97	;'a'
   191  0012  3420               	retlw	32	;' '
   192  0013  3473               	retlw	115	;'s'
   193  0014  3474               	retlw	116	;'t'
   194  0015  3472               	retlw	114	;'r'
   195  0016  3469               	retlw	105	;'i'
   196  0017  346E               	retlw	110	;'n'
   197  0018  3467               	retlw	103	;'g'
   198  0019  3420               	retlw	32	;' '
   199  001A  3400               	retlw	0
   200  001B  3400               	retlw	0
   201                           
   202                           ; #config settings
   203  0000                     
   204                           	psect	cinit
   205  07FC                     start_initialization:	
   206  07FC                     __initialization:	
   207  07FC                     end_of_initialization:	
   208                           ;End of C runtime variable initialization code
   209                           
   210  07FC                     __end_of__initialization:	
   211  07FC  0183               	clrf	3
   212  07FD  120A  118A  2FC2   	ljmp	_main	;jump to C main() function
   213                           
   214                           	psect	cstackCOMMON
   215  0070                     __pcstackCOMMON:	
   216  0070                     ?_print:	
   217  0070                     ??_print:	
   218                           ; 1 bytes @ 0x0
   219                           
   220  0070                     ?_main:	
   221                           ; 1 bytes @ 0x0
   222                           
   223                           
   224                           ; 1 bytes @ 0x0
   225  0070                     	ds	2
   226  0072                     print@i:	
   227                           
   228                           ; 2 bytes @ 0x2
   229  0072                     	ds	2
   230  0074                     print@message:	
   231                           
   232                           ; 1 bytes @ 0x4
   233  0074                     	ds	1
   234  0075                     ??_main:	
   235                           
   236                           	psect	maintext
   237  07C2                     __pmaintext:	
   238                           ; 1 bytes @ 0x5
   239 ;;
   240 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   241 ;;
   242 ;; *************** function _main *****************
   243 ;; Defined at:
   244 ;;		line 27 in file "serial.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;  input          40    0        unsigned char [40]
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    wreg      void 
   251 ;; Registers used:
   252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : B00/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   258 ;;      Params:         0       0       0       0       0
   259 ;;      Locals:         0       0       0       0       0
   260 ;;      Temps:          0       0       0       0       0
   261 ;;      Totals:         0       0       0       0       0
   262 ;;Total ram usage:        0 bytes
   263 ;; Hardware stack levels required when called:    2
   264 ;; This function calls:
   265 ;;		_print
   266 ;; This function is called by:
   267 ;;		Startup code after reset
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271                           
   272                           ;psect for function _main
   273  07C2                     _main:	
   274  07C2                     l670:	
   275                           ;incstack = 0
   276                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   277                           
   278                           
   279                           ;serial.c: 29:     TXSTA = 0x24;
   280  07C2  3024               	movlw	36
   281  07C3  1683               	bsf	3,5	;RP0=1, select bank1
   282  07C4  1303               	bcf	3,6	;RP1=0, select bank1
   283  07C5  0098               	movwf	24	;volatile
   284                           
   285                           ;serial.c: 30:     RCSTA = 0x90;
   286  07C6  3090               	movlw	144
   287  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   288  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   289  07C9  0098               	movwf	24	;volatile
   290                           
   291                           ;serial.c: 31:     SPBRG = 25;
   292  07CA  3019               	movlw	25
   293  07CB  1683               	bsf	3,5	;RP0=1, select bank1
   294  07CC  1303               	bcf	3,6	;RP1=0, select bank1
   295  07CD  0099               	movwf	25	;volatile
   296  07CE                     l672:	
   297                           
   298                           ;serial.c: 68:     char input[40];;serial.c: 69:     print("\r Enter a string \0");
   299  07CE  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   300  07CF  120A  118A  27D7  120A  118A  	fcall	_print
   301  07D4                     l25:	
   302  07D4  120A  118A  2800   	ljmp	start
   303  07D7                     __end_of_main:	
   304                           
   305                           	psect	text1
   306  07D7                     __ptext1:	
   307 ;; *************** function _print *****************
   308 ;; Defined at:
   309 ;;		line 79 in file "serial.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;  message         1    wreg     PTR unsigned char 
   312 ;;		 -> STR_1(19), 
   313 ;; Auto vars:     Size  Location     Type
   314 ;;  message         1    4[COMMON] PTR unsigned char 
   315 ;;		 -> STR_1(19), 
   316 ;;  i               2    2[COMMON] int 
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   321 ;; Tracked objects:
   322 ;;		On entry : 0/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   326 ;;      Params:         0       0       0       0       0
   327 ;;      Locals:         3       0       0       0       0
   328 ;;      Temps:          2       0       0       0       0
   329 ;;      Totals:         5       0       0       0       0
   330 ;;Total ram usage:        5 bytes
   331 ;; Hardware stack levels used:    2
   332 ;; This function calls:
   333 ;;		Nothing
   334 ;; This function is called by:
   335 ;;		_main
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           
   340                           ;psect for function _print
   341  07D7                     _print:	
   342                           
   343                           ;incstack = 0
   344                           ; Regs used in _print: [wreg-fsr0h+status,2+status,0+pclath]
   345                           ;print@message stored from wreg
   346  07D7  00F4               	movwf	print@message
   347  07D8                     l664:	
   348                           
   349                           ;serial.c: 80:     for (int i = 0;message[i]!='/0'; i++) {
   350  07D8  01F2               	clrf	print@i
   351  07D9  01F3               	clrf	print@i+1
   352  07DA                     l666:	
   353                           
   354                           ;serial.c: 82:         TXREG = message[i];
   355  07DA  0872               	movf	print@i,w
   356  07DB  0774               	addwf	print@message,w
   357  07DC  0084               	movwf	4
   358  07DD  120A  118A  2003  120A  118A  	fcall	stringdir
   359  07E2  1283               	bcf	3,5	;RP0=0, select bank0
   360  07E3  1303               	bcf	3,6	;RP1=0, select bank0
   361  07E4  0099               	movwf	25	;volatile
   362  07E5                     l30:	
   363                           ;serial.c: 83:         while (TRMT == 0);
   364                           
   365  07E5  1683               	bsf	3,5	;RP0=1, select bank1
   366  07E6  1303               	bcf	3,6	;RP1=0, select bank1
   367  07E7  1C98               	btfss	24,1	;volatile
   368  07E8  2FEA               	goto	u41
   369  07E9  2FEB               	goto	u40
   370  07EA                     u41:	
   371  07EA  2FE5               	goto	l30
   372  07EB                     u40:	
   373  07EB                     l668:	
   374                           
   375                           ;serial.c: 84:         _delay((unsigned long)((100)*(4000000/4000.0)));
   376  07EB  3082               	movlw	130
   377  07EC  00F1               	movwf	??_print+1
   378  07ED  30DD               	movlw	221
   379  07EE  00F0               	movwf	??_print
   380  07EF                     u57:	
   381  07EF  0BF0               	decfsz	??_print,f
   382  07F0  2FEF               	goto	u57
   383  07F1  0BF1               	decfsz	??_print+1,f
   384  07F2  2FEF               	goto	u57
   385  07F3  2FF4               	nop2
   386                           
   387                           ;serial.c: 85:     }
   388  07F4  3001               	movlw	1
   389  07F5  07F2               	addwf	print@i,f
   390  07F6  1803               	skipnc
   391  07F7  0AF3               	incf	print@i+1,f
   392  07F8  3000               	movlw	0
   393  07F9  07F3               	addwf	print@i+1,f
   394  07FA  2FDA               	goto	l666
   395  07FB  0008               	return
   396  07FC                     __end_of_print:	
   397  007E                     btemp	set	126	;btemp
   398  007E                     wtemp0	set	126


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    print@message	PTR unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 


Critical Paths under _main in COMMON

    _main->_print

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0      79
                              _print
 ---------------------------------------------------------------------------------
 (2) _print                                                5     5      0      79
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _print

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon May 26 21:03:14 2025

           print@message 0074                        pc 0002              __CFG_CP$OFF 0000  
                     l30 07E5                       l25 07D4                       u40 07EB  
                     u41 07EA                       u57 07EF                       fsr 0004  
            __CFG_LVP$ON 0000                      l670 07C2                      l664 07D8  
                    l672 07CE                      l666 07DA                      l668 07EB  
           __CFG_CPD$OFF 0000                      fsr0 0004                     STR_1 0009  
           __CFG_WDTE$ON 0000                     _RCIF 0065                     _TRMT 04C1  
           __CFG_WRT$OFF 0000                     _main 07C2                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000                    ?_main 0070  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _TXREG 0019                    _TXSTA 0098                    _print 07D7  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07D7                   ??_main 0075  
                 ?_print 0070           __CFG_PWRTE$OFF 0000                   print@i 0072  
        __CFG_FOSC$EXTRC 0000  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_print 07FC                  ??_print 0070               __pmaintext 07C2  
             __stringtab 0003                  __ptext1 07D7     end_of_initialization 07FC  
    start_initialization 07FC                ___latbits 0002                __pstrings 0003  
         __size_of_print 0025              __stringbase 0008       __end_of__stringtab 0009  
          __size_of_main 0015                stringcode 0003                 stringdir 0003  
               stringtab 0003  
