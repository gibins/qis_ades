Version 4.0 HI-TECH Software Intermediate Code
"1774 D:\pic\include\pic16f876a.h
[; ;D:\pic\include\pic16f876a.h: 1774: extern volatile unsigned char TXSTA __attribute__((address(0x098)));
[v _TXSTA `Vuc ~T0 @X0 0 e@152 ]
"864
[; ;D:\pic\include\pic16f876a.h: 864: extern volatile unsigned char RCSTA __attribute__((address(0x018)));
[v _RCSTA `Vuc ~T0 @X0 0 e@24 ]
"1855
[; ;D:\pic\include\pic16f876a.h: 1855: extern volatile unsigned char SPBRG __attribute__((address(0x099)));
[v _SPBRG `Vuc ~T0 @X0 0 e@153 ]
"1225
[; ;D:\pic\include\pic16f876a.h: 1225: extern volatile unsigned char TRISA __attribute__((address(0x085)));
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"2004
[; ;D:\pic\include\pic16f876a.h: 2004: extern volatile unsigned char ADCON1 __attribute__((address(0x09F)));
[v _ADCON1 `Vuc ~T0 @X0 0 e@159 ]
"1275
[; ;D:\pic\include\pic16f876a.h: 1275: extern volatile unsigned char TRISB __attribute__((address(0x086)));
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"959
[; ;D:\pic\include\pic16f876a.h: 959: extern volatile unsigned char TXREG __attribute__((address(0x019)));
[v _TXREG `Vuc ~T0 @X0 0 e@25 ]
"2707
[; ;D:\pic\include\pic16f876a.h: 2707: extern volatile __bit TRMT __attribute__((address(0x4C1)));
[v _TRMT `Vb ~T0 @X0 0 e@1217 ]
[p mainexit ]
"2431
[; ;D:\pic\include\pic16f876a.h: 2431: extern volatile __bit RB0 __attribute__((address(0x30)));
[v _RB0 `Vb ~T0 @X0 0 e@48 ]
[v F761 `(v ~T0 @X0 1 tf1`ul ]
"92 D:\pic\include\pic.h
[v __delay `JF761 ~T0 @X0 0 e ]
[p i __delay ]
"1059 D:\pic\include\pic16f876a.h
[; ;D:\pic\include\pic16f876a.h: 1059: extern volatile unsigned char ADCON0 __attribute__((address(0x01F)));
[v _ADCON0 `Vuc ~T0 @X0 0 e@31 ]
"2347
[; ;D:\pic\include\pic16f876a.h: 2347: extern volatile __bit GO __attribute__((address(0xFA)));
[v _GO `Vb ~T0 @X0 0 e@250 ]
"1052
[; ;D:\pic\include\pic16f876a.h: 1052: extern volatile unsigned char ADRESH __attribute__((address(0x01E)));
[v _ADRESH `Vuc ~T0 @X0 0 e@30 ]
"1997
[; ;D:\pic\include\pic16f876a.h: 1997: extern volatile unsigned char ADRESL __attribute__((address(0x09E)));
[v _ADRESL `Vuc ~T0 @X0 0 e@158 ]
"194 D:\pic\include\c90\stdio.h
[v _sprintf `(i ~T0 @X0 0 e1v`*uc`*Cuc ]
"7 adc-selector.c
[p x FOSC = EXTRC ]
"8
[p x WDTE = OFF ]
"9
[p x PWRTE = OFF ]
"10
[p x BOREN = OFF ]
"11
[p x LVP = OFF ]
"12
[p x CPD = OFF ]
"13
[p x WRT = OFF ]
"14
[p x CP = OFF ]
"54 D:\pic\include\pic16f876a.h
[; ;D:\pic\include\pic16f876a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;D:\pic\include\pic16f876a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;D:\pic\include\pic16f876a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;D:\pic\include\pic16f876a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;D:\pic\include\pic16f876a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;D:\pic\include\pic16f876a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;D:\pic\include\pic16f876a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;D:\pic\include\pic16f876a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;D:\pic\include\pic16f876a.h: 342: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"362
[; ;D:\pic\include\pic16f876a.h: 362: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"440
[; ;D:\pic\include\pic16f876a.h: 440: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"496
[; ;D:\pic\include\pic16f876a.h: 496: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"536
[; ;D:\pic\include\pic16f876a.h: 536: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"543
[; ;D:\pic\include\pic16f876a.h: 543: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"550
[; ;D:\pic\include\pic16f876a.h: 550: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"557
[; ;D:\pic\include\pic16f876a.h: 557: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"632
[; ;D:\pic\include\pic16f876a.h: 632: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"639
[; ;D:\pic\include\pic16f876a.h: 639: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"710
[; ;D:\pic\include\pic16f876a.h: 710: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"717
[; ;D:\pic\include\pic16f876a.h: 717: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"787
[; ;D:\pic\include\pic16f876a.h: 787: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"794
[; ;D:\pic\include\pic16f876a.h: 794: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"801
[; ;D:\pic\include\pic16f876a.h: 801: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"808
[; ;D:\pic\include\pic16f876a.h: 808: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"866
[; ;D:\pic\include\pic16f876a.h: 866: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"961
[; ;D:\pic\include\pic16f876a.h: 961: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"968
[; ;D:\pic\include\pic16f876a.h: 968: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"975
[; ;D:\pic\include\pic16f876a.h: 975: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"982
[; ;D:\pic\include\pic16f876a.h: 982: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"989
[; ;D:\pic\include\pic16f876a.h: 989: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"996
[; ;D:\pic\include\pic16f876a.h: 996: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1054
[; ;D:\pic\include\pic16f876a.h: 1054: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1061
[; ;D:\pic\include\pic16f876a.h: 1061: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1157
[; ;D:\pic\include\pic16f876a.h: 1157: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1227
[; ;D:\pic\include\pic16f876a.h: 1227: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1277
[; ;D:\pic\include\pic16f876a.h: 1277: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1339
[; ;D:\pic\include\pic16f876a.h: 1339: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1401
[; ;D:\pic\include\pic16f876a.h: 1401: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1457
[; ;D:\pic\include\pic16f876a.h: 1457: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1497
[; ;D:\pic\include\pic16f876a.h: 1497: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1531
[; ;D:\pic\include\pic16f876a.h: 1531: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1593
[; ;D:\pic\include\pic16f876a.h: 1593: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1600
[; ;D:\pic\include\pic16f876a.h: 1600: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1607
[; ;D:\pic\include\pic16f876a.h: 1607: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"1776
[; ;D:\pic\include\pic16f876a.h: 1776: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"1857
[; ;D:\pic\include\pic16f876a.h: 1857: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"1864
[; ;D:\pic\include\pic16f876a.h: 1864: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"1934
[; ;D:\pic\include\pic16f876a.h: 1934: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"1999
[; ;D:\pic\include\pic16f876a.h: 1999: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2006
[; ;D:\pic\include\pic16f876a.h: 2006: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2065
[; ;D:\pic\include\pic16f876a.h: 2065: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2072
[; ;D:\pic\include\pic16f876a.h: 2072: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2079
[; ;D:\pic\include\pic16f876a.h: 2079: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2086
[; ;D:\pic\include\pic16f876a.h: 2086: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2093
[; ;D:\pic\include\pic16f876a.h: 2093: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2138
[; ;D:\pic\include\pic16f876a.h: 2138: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"23 adc-selector.c
[; ;adc-selector.c: 23: void configRegisters() {
[v _configRegisters `(v ~T0 @X0 1 ef ]
{
[e :U _configRegisters ]
[f ]
"25
[; ;adc-selector.c: 25:     TXSTA = 0x24;
[e = _TXSTA -> -> 36 `i `uc ]
"26
[; ;adc-selector.c: 26:     RCSTA = 0x90;
[e = _RCSTA -> -> 144 `i `uc ]
"27
[; ;adc-selector.c: 27:     SPBRG = 25;
[e = _SPBRG -> -> 25 `i `uc ]
"31
[; ;adc-selector.c: 31:     TRISA = 0xFF;
[e = _TRISA -> -> 255 `i `uc ]
"32
[; ;adc-selector.c: 32:     ADCON1 = 0x80;
[e = _ADCON1 -> -> 128 `i `uc ]
"37
[; ;adc-selector.c: 37:     TRISB = 0xFF;
[e = _TRISB -> -> 255 `i `uc ]
"39
[; ;adc-selector.c: 39: }
[e :UE 88 ]
}
"43
[; ;adc-selector.c: 43: int getAdconReg(int pos) {
[v _getAdconReg `(i ~T0 @X0 1 ef1`i ]
{
[e :U _getAdconReg ]
[v _pos `i ~T0 @X0 1 r1 ]
[f ]
[v F829 `i ~T0 @X0 -> 5 `i s ]
[i F829
:U ..
"45
[; ;adc-selector.c: 45:     int adcon0[]={ 0x41,0x49,0x51,0x59,0x61};
-> 65 `i
-> 73 `i
-> 81 `i
-> 89 `i
-> 97 `i
..
]
[v _adcon0 `i ~T0 @X0 -> 5 `i a ]
[e = _adcon0 F829 ]
"46
[; ;adc-selector.c: 46:     return adcon0[pos];
[e ) *U + &U _adcon0 * -> -> _pos `ui `ux -> -> # *U &U _adcon0 `ui `ux ]
[e $UE 89  ]
"48
[; ;adc-selector.c: 48: }
[e :UE 89 ]
}
"53
[; ;adc-selector.c: 53: void printMessage(char *message) {
[v _printMessage `(v ~T0 @X0 1 ef1`*uc ]
{
[e :U _printMessage ]
[v _message `*uc ~T0 @X0 1 r1 ]
[f ]
"55
[; ;adc-selector.c: 55:     for (int i = 0; message[i] != '\0'; i++) {
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $U 94  ]
[e :U 91 ]
{
"56
[; ;adc-selector.c: 56:         TXREG = message[i];
[e = _TXREG -> *U + _message * -> _i `x -> -> # *U _message `i `x `uc ]
"57
[; ;adc-selector.c: 57:         while (TRMT == 0);
[e $U 95  ]
[e :U 96 ]
[e :U 95 ]
[e $ == -> _TRMT `i -> 0 `i 96  ]
[e :U 97 ]
"58
[; ;adc-selector.c: 58:     }
}
[e ++ _i -> 1 `i ]
[e :U 94 ]
[e $ != -> *U + _message * -> _i `x -> -> # *U _message `i `x `ui -> 0 `ui 91  ]
[e :U 92 ]
}
"60
[; ;adc-selector.c: 60: }
[e :UE 90 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"62
[; ;adc-selector.c: 62: void main(void) {
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"64
[; ;adc-selector.c: 64:     int adc_result;
[v _adc_result `i ~T0 @X0 1 a ]
"65
[; ;adc-selector.c: 65:     char encoded_result[40];
[v _encoded_result `uc ~T0 @X0 -> 40 `i a ]
"66
[; ;adc-selector.c: 66:     int adc_channel_number=0;
[v _adc_channel_number `i ~T0 @X0 1 a ]
[e = _adc_channel_number -> 0 `i ]
"68
[; ;adc-selector.c: 68:     configRegisters();
[e ( _configRegisters ..  ]
"70
[; ;adc-selector.c: 70:     while(1)
[e :U 100 ]
"71
[; ;adc-selector.c: 71:     {
{
"72
[; ;adc-selector.c: 72:         if(RB0 == 1) {
[e $ ! == -> _RB0 `i -> 1 `i 102  ]
{
"73
[; ;adc-selector.c: 73:             while(RB0==1);
[e $U 103  ]
[e :U 104 ]
[e :U 103 ]
[e $ == -> _RB0 `i -> 1 `i 104  ]
[e :U 105 ]
"74
[; ;adc-selector.c: 74:             _delay((unsigned long)((200)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"75
[; ;adc-selector.c: 75:            adc_channel_number++;
[e ++ _adc_channel_number -> 1 `i ]
"77
[; ;adc-selector.c: 77:         }
}
[e :U 102 ]
"78
[; ;adc-selector.c: 78:         if(RB0 == 1 && adc_channel_number > 4)
[e $ ! && == -> _RB0 `i -> 1 `i > _adc_channel_number -> 4 `i 106  ]
"79
[; ;adc-selector.c: 79:         {
{
"80
[; ;adc-selector.c: 80:             adc_channel_number = 0;
[e = _adc_channel_number -> 0 `i ]
"81
[; ;adc-selector.c: 81:         }
}
[e :U 106 ]
"83
[; ;adc-selector.c: 83:         ADCON0 = getAdconReg(adc_channel_number);
[e = _ADCON0 -> ( _getAdconReg (1 _adc_channel_number `uc ]
"84
[; ;adc-selector.c: 84:         GO = 1;
[e = _GO -> -> 1 `i `b ]
"85
[; ;adc-selector.c: 85:         while (GO == 1);
[e $U 107  ]
[e :U 108 ]
[e :U 107 ]
[e $ == -> _GO `i -> 1 `i 108  ]
[e :U 109 ]
"88
[; ;adc-selector.c: 88:         adc_result = (ADRESH << 8) | ADRESL;
[e = _adc_result | << -> _ADRESH `i -> 8 `i -> _ADRESL `i ]
"89
[; ;adc-selector.c: 89:         sprintf(encoded_result, "\rADC Channel %d Value %d", adc_channel_number, adc_result);
[e ( _sprintf (1 , , (. , &U _encoded_result :s 1C _adc_channel_number _adc_result ]
"90
[; ;adc-selector.c: 90:         printMessage(&encoded_result);
[e ( _printMessage (1 -> &U _encoded_result `*uc ]
"91
[; ;adc-selector.c: 91:     }
}
[e :U 99 ]
[e $U 100  ]
[e :U 101 ]
"93
[; ;adc-selector.c: 93:     return;
[e $UE 98  ]
"94
[; ;adc-selector.c: 94: }
[e :UE 98 ]
}
[p f _sprintf 8388736 ]
[a 1C 13 65 68 67 32 67 104 97 110 110 101 108 32 37 100 32 86 97 108 117 101 32 37 100 0 ]
